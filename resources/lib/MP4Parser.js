import e from"./debug.js";import*as t from"./token-types.js";import"strtok3.js";import{uint8ArrayToString as a,stringToUint8Array as n,uint8ArrayToHex as s}from"./uint8array-extras.js";class r{constructor(e,t,a){this.metadata=e,this.tokenizer=t,this.options=a}}const i=e=>class extends Error{constructor(t){super(t),this.name=e}};class o extends(i("UnexpectedFileContentError")){constructor(e,t){super(t),this.fileType=e}toString(){return`${this.name} (FileType: ${this.fileType}): ${this.message}`}}class c extends(i("FieldDecodingError")){}class l extends(i("InternalParserError")){}const h=e=>class extends o{constructor(t){super(e,t)}};const d=/^[\x21-\x7eÂ©][\x20-\x7e\x00()]{3}/,m={len:4,get:(e,t)=>{const n=a(e.slice(t,t+m.len),"latin1");if(!n.match(d))throw new c(`FourCC contains invalid characters: ${function(e){const t=[];for(let a=0,n=e.length;a<n;a++){const n=Number(e.charCodeAt(a)).toString(16);t.push(1===n.length?`0${n}`:n)}return t.join(" ")}(n)} "${n}"`);return n},put:(e,t,a)=>{const s=n(a);if(4!==s.length)throw new l("Invalid length");return e.set(s,t),t+4}};var u;!function(e){e[e.text_utf8=0]="text_utf8",e[e.binary=1]="binary",e[e.external_info=2]="external_info",e[e.reserved=3]="reserved"}(u||(u={})),e("music-metadata:parser:APEv2"),e("music-metadata:parser:ID3v1");const p=["Blues","Classic Rock","Country","Dance","Disco","Funk","Grunge","Hip-Hop","Jazz","Metal","New Age","Oldies","Other","Pop","R&B","Rap","Reggae","Rock","Techno","Industrial","Alternative","Ska","Death Metal","Pranks","Soundtrack","Euro-Techno","Ambient","Trip-Hop","Vocal","Jazz+Funk","Fusion","Trance","Classical","Instrumental","Acid","House","Game","Sound Clip","Gospel","Noise","Alt. Rock","Bass","Soul","Punk","Space","Meditative","Instrumental Pop","Instrumental Rock","Ethnic","Gothic","Darkwave","Techno-Industrial","Electronic","Pop-Folk","Eurodance","Dream","Southern Rock","Comedy","Cult","Gangsta Rap","Top 40","Christian Rap","Pop/Funk","Jungle","Native American","Cabaret","New Wave","Psychedelic","Rave","Showtunes","Trailer","Lo-Fi","Tribal","Acid Punk","Acid Jazz","Polka","Retro","Musical","Rock & Roll","Hard Rock","Folk","Folk/Rock","National Folk","Swing","Fast-Fusion","Bebob","Latin","Revival","Celtic","Bluegrass","Avantgarde","Gothic Rock","Progressive Rock","Psychedelic Rock","Symphonic Rock","Slow Rock","Big Band","Chorus","Easy Listening","Acoustic","Humour","Speech","Chanson","Opera","Chamber Music","Sonata","Symphony","Booty Bass","Primus","Porn Groove","Satire","Slow Jam","Club","Tango","Samba","Folklore","Ballad","Power Ballad","Rhythmic Soul","Freestyle","Duet","Punk Rock","Drum Solo","A Cappella","Euro-House","Dance Hall","Goa","Drum & Bass","Club-House","Hardcore","Terror","Indie","BritPop","Negerpunk","Polsk Punk","Beat","Christian Gangsta Rap","Heavy Metal","Black Metal","Crossover","Contemporary Christian","Christian Rock","Merengue","Salsa","Thrash Metal","Anime","JPop","Synthpop","Abstract","Art Rock","Baroque","Bhangra","Big Beat","Breakbeat","Chillout","Downtempo","Dub","EBM","Eclectic","Electro","Electroclash","Emo","Experimental","Garage","Global","IDM","Illbient","Industro-Goth","Jam Band","Krautrock","Leftfield","Lounge","Math Rock","New Romantic","Nu-Breakz","Post-Punk","Post-Rock","Psytrance","Shoegaze","Space Rock","Trop Rock","World Music","Neoclassical","Audiobook","Audio Theatre","Neue Deutsche Welle","Podcast","Indie Rock","G-Funk","Dubstep","Garage Rock","Psybient"],g=e("music-metadata:parser:MP4:atom");class T extends(h("MP4")){}const f={len:8,get:(e,a)=>{const n=t.UINT32_BE.get(e,a);if(n<0)throw new T("Invalid atom header length");return{length:BigInt(n),name:new t.StringType(4,"latin1").get(e,a+4)}},put:(e,a,n)=>(t.UINT32_BE.put(e,a,Number(n.length)),m.put(e,a+4,n.name))},k=t.UINT64_BE,y={len:4,get:(e,a)=>({type:new t.StringType(4,"ascii").get(e,a)})};class I{constructor(e,t,a){if(this.len=e,e<t)throw new T(`Atom ${a} expected to be ${t}, but specifies ${e} bytes long.`);e>t&&g(`Warning: atom ${a} expected to be ${t}, but was actually ${e} bytes long.`)}}const w=(e,a)=>{const n=t.UINT32_BE.get(e,a)-2082844800;return new Date(1e3*n)};class b extends I{constructor(e){super(e,24,"mdhd"),this.len=e}get(e,a){return{version:t.UINT8.get(e,a+0),flags:t.UINT24_BE.get(e,a+1),creationTime:w(e,a+4),modificationTime:w(e,a+8),timeScale:t.UINT32_BE.get(e,a+12),duration:t.UINT32_BE.get(e,a+16),language:t.UINT16_BE.get(e,a+20),quality:t.UINT16_BE.get(e,a+22)}}}class E extends I{constructor(e){super(e,100,"mvhd"),this.len=e}get(e,a){return{version:t.UINT8.get(e,a),flags:t.UINT24_BE.get(e,a+1),creationTime:w(e,a+4),modificationTime:w(e,a+8),timeScale:t.UINT32_BE.get(e,a+12),duration:t.UINT32_BE.get(e,a+16),preferredRate:t.UINT32_BE.get(e,a+20),preferredVolume:t.UINT16_BE.get(e,a+24),previewTime:t.UINT32_BE.get(e,a+72),previewDuration:t.UINT32_BE.get(e,a+76),posterTime:t.UINT32_BE.get(e,a+80),selectionTime:t.UINT32_BE.get(e,a+84),selectionDuration:t.UINT32_BE.get(e,a+88),currentTime:t.UINT32_BE.get(e,a+92),nextTrackID:t.UINT32_BE.get(e,a+96)}}}class B{constructor(e){this.len=e}get(e,a){return{type:{set:t.UINT8.get(e,a+0),type:t.UINT24_BE.get(e,a+1)},locale:t.UINT24_BE.get(e,a+4),value:new t.Uint8ArrayType(this.len-8).get(e,a+8)}}}class N{constructor(e){this.len=e}get(e,a){return{version:t.UINT8.get(e,a),flags:t.UINT24_BE.get(e,a+1),name:new t.StringType(this.len-4,"utf-8").get(e,a+4)}}}class S{constructor(e){this.len=e}get(e,a){return{version:t.UINT8.get(e,a),flags:t.UINT24_BE.get(e,a+1),creationTime:w(e,a+4),modificationTime:w(e,a+8),trackId:t.UINT32_BE.get(e,a+12),duration:t.UINT32_BE.get(e,a+20),layer:t.UINT16_BE.get(e,a+24),alternateGroup:t.UINT16_BE.get(e,a+26),volume:t.UINT16_BE.get(e,a+28)}}}const _=8,v=(e,a)=>({version:t.UINT8.get(e,a),flags:t.UINT24_BE.get(e,a+1),numberOfEntries:t.UINT32_BE.get(e,a+4)});class C{constructor(e){this.len=e}get(e,a){const n=this.len-12;return{dataFormat:m.get(e,a),dataReferenceIndex:t.UINT16_BE.get(e,a+10),description:n>0?new t.Uint8ArrayType(n).get(e,a+12):void 0}}}class U{constructor(e){this.len=e}get(e,a){const n=v(e,a);a+=_;const s=[];for(let r=0;r<n.numberOfEntries;++r){const n=t.UINT32_BE.get(e,a);a+=t.UINT32_BE.len,s.push(new C(n-t.UINT32_BE.len).get(e,a)),a+=n}return{header:n,table:s}}}const P={len:8,get:(e,a)=>({version:t.INT16_BE.get(e,a),revision:t.INT16_BE.get(e,a+2),vendor:t.INT32_BE.get(e,a+4)})},A={len:12,get:(e,a)=>({numAudioChannels:t.INT16_BE.get(e,a+0),sampleSize:t.INT16_BE.get(e,a+2),compressionId:t.INT16_BE.get(e,a+4),packetSize:t.INT16_BE.get(e,a+6),sampleRate:t.UINT16_BE.get(e,a+8)+t.UINT16_BE.get(e,a+10)/1e4})};class z{constructor(e,t){this.len=e,this.token=t}get(e,a){const n=t.INT32_BE.get(e,a+4);return{version:t.INT8.get(e,a+0),flags:t.INT24_BE.get(e,a+1),numberOfEntries:n,entries:O(e,this.token,a+8,this.len-8,n)}}}const x={len:8,get:(e,a)=>({count:t.INT32_BE.get(e,a+0),duration:t.INT32_BE.get(e,a+4)})};class D extends z{constructor(e){super(e,x),this.len=e}}const R={len:12,get:(e,a)=>({firstChunk:t.INT32_BE.get(e,a),samplesPerChunk:t.INT32_BE.get(e,a+4),sampleDescriptionId:t.INT32_BE.get(e,a+8)})};class $ extends z{constructor(e){super(e,R),this.len=e}}class F{constructor(e){this.len=e}get(e,a){const n=t.INT32_BE.get(e,a+8);return{version:t.INT8.get(e,a),flags:t.INT24_BE.get(e,a+1),sampleSize:t.INT32_BE.get(e,a+4),numberOfEntries:n,entries:O(e,t.INT32_BE,a+12,this.len-12,n)}}}class M extends z{constructor(e){super(e,t.INT32_BE),this.len=e}}class L{constructor(e){this.len=e}get(e,a){const n=t.INT16_BE.get(e,a+0);return new t.StringType(n,"utf-8").get(e,a+2)}}function O(e,t,a,n,s){if(g(`remainingLen=${n}, numberOfEntries=${s} * token-len=${t.len}`),0===n)return[];if(n!==s*t.len)throw new T("mismatch number-of-entries with remaining atom-length");const r=[];for(let n=0;n<s;++n)r.push(t.get(e,a)),a+=t.len;return r}const G=e("music-metadata:parser:MP4:Atom");class H{static async readAtom(e,t,a,n){const s=e.position;G(`Reading next token on offset=${s}...`);const r=await e.readToken(f),i=1n===r.length;i&&(r.length=await e.readToken(k));const o=new H(r,i,a),c=o.getPayloadLength(n);return G(`parse atom name=${o.atomPath}, extended=${o.extended}, offset=${s}, len=${o.header.length}`),await o.readData(e,t,c),o}constructor(e,t,a){this.header=e,this.extended=t,this.parent=a,this.children=[],this.atomPath=(this.parent?`${this.parent.atomPath}.`:"")+this.header.name}getHeaderLength(){return this.extended?16:8}getPayloadLength(e){return(0n===this.header.length?e:Number(this.header.length))-this.getHeaderLength()}async readAtoms(e,t,a){for(;a>0;){const n=await H.readAtom(e,t,this,a);this.children.push(n),a-=0n===n.header.length?a:Number(n.header.length)}}async readData(e,t,a){switch(this.header.name){case"moov":case"udta":case"trak":case"mdia":case"minf":case"stbl":case"<id>":case"ilst":case"tref":return this.readAtoms(e,t,this.getPayloadLength(a));case"meta":{const n="hdlr"===(await e.peekToken(f)).name?0:4;return await e.ignore(n),this.readAtoms(e,t,this.getPayloadLength(a)-n)}default:return t(this,a)}}}var W,J,j,V,q;!function(e){e[e.shot=10]="shot",e[e.scene=20]="scene",e[e.track=30]="track",e[e.part=40]="part",e[e.album=50]="album",e[e.edition=60]="edition",e[e.collection=70]="collection"}(W||(W={})),function(e){e[e.video=1]="video",e[e.audio=2]="audio",e[e.complex=3]="complex",e[e.logo=4]="logo",e[e.subtitle=17]="subtitle",e[e.button=18]="button",e[e.control=32]="control"}(J||(J={})),function(e){e[e.Other=0]="Other",e[e["32x32 pixels 'file icon' (PNG only)"]=1]="32x32 pixels 'file icon' (PNG only)",e[e["Other file icon"]=2]="Other file icon",e[e["Cover (front)"]=3]="Cover (front)",e[e["Cover (back)"]=4]="Cover (back)",e[e["Leaflet page"]=5]="Leaflet page",e[e["Media (e.g. label side of CD)"]=6]="Media (e.g. label side of CD)",e[e["Lead artist/lead performer/soloist"]=7]="Lead artist/lead performer/soloist",e[e["Artist/performer"]=8]="Artist/performer",e[e.Conductor=9]="Conductor",e[e["Band/Orchestra"]=10]="Band/Orchestra",e[e.Composer=11]="Composer",e[e["Lyricist/text writer"]=12]="Lyricist/text writer",e[e["Recording Location"]=13]="Recording Location",e[e["During recording"]=14]="During recording",e[e["During performance"]=15]="During performance",e[e["Movie/video screen capture"]=16]="Movie/video screen capture",e[e["A bright coloured fish"]=17]="A bright coloured fish",e[e.Illustration=18]="Illustration",e[e["Band/artist logotype"]=19]="Band/artist logotype",e[e["Publisher/Studio logotype"]=20]="Publisher/Studio logotype"}(j||(j={})),function(e){e[e.other=0]="other",e[e.lyrics=1]="lyrics",e[e.text=2]="text",e[e.movement_part=3]="movement_part",e[e.events=4]="events",e[e.chord=5]="chord",e[e.trivia_pop=6]="trivia_pop"}(V||(V={})),function(e){e[e.notSynchronized0=0]="notSynchronized0",e[e.mpegFrameNumber=1]="mpegFrameNumber",e[e.milliseconds=2]="milliseconds"}(q||(q={}));const Q=e("music-metadata:parser:MP4"),K={raw:{lossy:!1,format:"raw"},MAC3:{lossy:!0,format:"MACE 3:1"},MAC6:{lossy:!0,format:"MACE 6:1"},ima4:{lossy:!0,format:"IMA 4:1"},ulaw:{lossy:!0,format:"uLaw 2:1"},alaw:{lossy:!0,format:"uLaw 2:1"},Qclp:{lossy:!0,format:"QUALCOMM PureVoice"},".mp3":{lossy:!0,format:"MPEG-1 layer 3"},alac:{lossy:!1,format:"ALAC"},"ac-3":{lossy:!0,format:"AC-3"},mp4a:{lossy:!0,format:"MPEG-4/AAC"},mp4s:{lossy:!0,format:"MP4S"},c608:{lossy:!0,format:"CEA-608"},c708:{lossy:!0,format:"CEA-708"}};function X(e,t,a){return a.indexOf(e)===t}class Y extends r{constructor(){super(...arguments),this.tracks=[],this.atomParsers={mvhd:async e=>{const t=await this.tokenizer.readToken(new E(e));this.metadata.setFormat("creationTime",t.creationTime),this.metadata.setFormat("modificationTime",t.modificationTime)},mdhd:async e=>{const t=await this.tokenizer.readToken(new b(e)),a=this.getTrackDescription();a.creationTime=t.creationTime,a.modificationTime=t.modificationTime,a.timeScale=t.timeScale,a.duration=t.duration},chap:async e=>{const a=this.getTrackDescription(),n=[];for(;e>=t.UINT32_BE.len;)n.push(await this.tokenizer.readNumber(t.UINT32_BE)),e-=t.UINT32_BE.len;a.chapterList=n},tkhd:async e=>{const t=await this.tokenizer.readToken(new S(e));this.tracks.push(t)},mdat:async e=>{if(this.audioLengthInBytes=e,this.calculateBitRate(),this.options.includeChapters){const t=this.tracks.filter((e=>e.chapterList));if(1===t.length){const a=t[0].chapterList,n=this.tracks.filter((e=>-1!==a.indexOf(e.trackId)));if(1===n.length)return this.parseChapterTrack(n[0],t[0],e)}}await this.tokenizer.ignore(e)},ftyp:async e=>{const t=[];for(;e>0;){const a=await this.tokenizer.readToken(y);e-=y.len;const n=a.type.replace(/\W/g,"");n.length>0&&t.push(n)}Q(`ftyp: ${t.join("/")}`);const a=t.filter(X).join("/");this.metadata.setFormat("container",a)},stsd:async e=>{const t=await this.tokenizer.readToken(new U(e));this.getTrackDescription().soundSampleDescription=t.table.map((e=>this.parseSoundSampleDescription(e)))},stsc:async e=>{const t=await this.tokenizer.readToken(new $(e));this.getTrackDescription().sampleToChunkTable=t.entries},stts:async e=>{const t=await this.tokenizer.readToken(new D(e));this.getTrackDescription().timeToSampleTable=t.entries},stsz:async e=>{const t=await this.tokenizer.readToken(new F(e)),a=this.getTrackDescription();a.sampleSize=t.sampleSize,a.sampleSizeTable=t.entries},stco:async e=>{const t=await this.tokenizer.readToken(new M(e));this.getTrackDescription().chunkOffsetTable=t.entries},date:async e=>{const a=await this.tokenizer.readToken(new t.StringType(e,"utf-8"));await this.addTag("date",a)}}}static read_BE_Integer(e,a){const n=(a?"INT":"UINT")+8*e.length+(e.length>1?"_BE":""),s=t[n];if(!s)throw new T(`Token for integer type not found: "${n}"`);return Number(s.get(e,0))}async parse(){this.tracks=[];let e=this.tokenizer.fileInfo.size||0;for(;!this.tokenizer.fileInfo.size||e>0;){try{if("\0\0\0\0"===(await this.tokenizer.peekToken(f)).name){const e=`Error at offset=${this.tokenizer.position}: box.id=0`;Q(e),this.addWarning(e);break}}catch(e){if(!(e instanceof Error))throw e;{const t=`Error at offset=${this.tokenizer.position}: ${e.message}`;Q(t),this.addWarning(t)}break}const t=await H.readAtom(this.tokenizer,((e,t)=>this.handleAtom(e,t)),null,e);e-=t.header.length===BigInt(0)?e:Number(t.header.length)}const t=[];this.tracks.forEach((e=>{const a=[];e.soundSampleDescription.forEach((e=>{const t={},n=K[e.dataFormat];if(n?(a.push(n.format),t.codecName=n.format):t.codecName=`<${e.dataFormat}>`,e.description){const{description:a}=e;a.sampleRate>0&&(t.type=J.audio,t.audio={samplingFrequency:a.sampleRate,bitDepth:a.sampleSize,channels:a.numAudioChannels})}this.metadata.addStreamInfo(t)})),a.length>=1&&t.push(a.join("/"))})),t.length>0&&this.metadata.setFormat("codec",t.filter(X).join("+"));const a=this.tracks.filter((e=>e.soundSampleDescription.length>=1&&e.soundSampleDescription[0].description&&e.soundSampleDescription[0].description.numAudioChannels>0));if(a.length>=1){const e=a[0];if(e.timeScale>0){const t=e.duration/e.timeScale;this.metadata.setFormat("duration",t)}const t=e.soundSampleDescription[0];if(t.description&&(this.metadata.setFormat("sampleRate",t.description.sampleRate),this.metadata.setFormat("bitsPerSample",t.description.sampleSize),this.metadata.setFormat("numberOfChannels",t.description.numAudioChannels),0===e.timeScale&&e.timeToSampleTable.length>0)){const a=e.timeToSampleTable.map((e=>e.count*e.duration)).reduce(((e,t)=>e+t))/t.description.sampleRate;this.metadata.setFormat("duration",a)}const n=K[t.dataFormat];n&&this.metadata.setFormat("lossless",!n.lossy),this.calculateBitRate()}}async handleAtom(e,t){if(e.parent)switch(e.parent.header.name){case"ilst":case"<id>":return this.parseMetadataItemData(e)}if(this.atomParsers[e.header.name])return this.atomParsers[e.header.name](t);Q(`No parser for atom path=${e.atomPath}, payload-len=${t}, ignoring atom`),await this.tokenizer.ignore(t)}getTrackDescription(){return this.tracks[this.tracks.length-1]}calculateBitRate(){this.audioLengthInBytes&&this.metadata.format.duration&&this.metadata.setFormat("bitrate",8*this.audioLengthInBytes/this.metadata.format.duration)}async addTag(e,t){await this.metadata.addTag("iTunes",e,t)}addWarning(e){Q(`Warning: ${e}`),this.metadata.addWarning(e)}parseMetadataItemData(e){let n=e.header.name;return e.readAtoms(this.tokenizer,(async(e,r)=>{const i=e.getPayloadLength(r);switch(e.header.name){case"data":return this.parseValueAtom(n,e);case"name":case"mean":case"rate":{const e=await this.tokenizer.readToken(new N(i));n+=`:${e.name}`;break}default:{const r=await this.tokenizer.readToken(new t.Uint8ArrayType(i));this.addWarning(`Unsupported meta-item: ${n}[${e.header.name}] => value=${s(r)} ascii=${a(r,"ascii")}`)}}}),e.getPayloadLength(0))}async parseValueAtom(e,a){const n=await this.tokenizer.readToken(new B(Number(a.header.length)-f.len));if(0!==n.type.set)throw new T(`Unsupported type-set != 0: ${n.type.set}`);switch(n.type.type){case 0:switch(e){case"trkn":case"disk":{const a=t.UINT8.get(n.value,3),s=t.UINT8.get(n.value,5);await this.addTag(e,`${a}/${s}`);break}case"gnre":{const a=t.UINT8.get(n.value,1),s=p[a-1];await this.addTag(e,s);break}case"rate":{const t=new TextDecoder("ascii").decode(n.value);await this.addTag(e,t);break}default:Q(`unknown proprietary value type for: ${a.atomPath}`)}break;case 1:case 18:await this.addTag(e,new TextDecoder("utf-8").decode(n.value));break;case 13:if(this.options.skipCovers)break;await this.addTag(e,{format:"image/jpeg",data:Uint8Array.from(n.value)});break;case 14:if(this.options.skipCovers)break;await this.addTag(e,{format:"image/png",data:Uint8Array.from(n.value)});break;case 21:await this.addTag(e,Y.read_BE_Integer(n.value,!0));break;case 22:await this.addTag(e,Y.read_BE_Integer(n.value,!1));break;case 65:await this.addTag(e,t.UINT8.get(n.value,0));break;case 66:await this.addTag(e,t.UINT16_BE.get(n.value,0));break;case 67:await this.addTag(e,t.UINT32_BE.get(n.value,0));break;default:this.addWarning(`atom key=${e}, has unknown well-known-type (data-type): ${n.type.type}`)}}parseSoundSampleDescription(e){const t={dataFormat:e.dataFormat,dataReferenceIndex:e.dataReferenceIndex};let a=0;if(e.description){const n=P.get(e.description,a);a+=P.len,0===n.version||1===n.version?t.description=A.get(e.description,a):Q(`Warning: sound-sample-description ${n} not implemented`)}return t}async parseChapterTrack(e,t,a){if(!e.sampleSize&&e.chunkOffsetTable.length!==e.sampleSizeTable.length)throw new Error("Expected equal chunk-offset-table & sample-size-table length.");const n=[];for(let s=0;s<e.chunkOffsetTable.length&&a>0;++s){const r=e.chunkOffsetTable[s]-this.tokenizer.position,i=e.sampleSize>0?e.sampleSize:e.sampleSizeTable[s];if((a-=r+i)<0)throw new T("Chapter chunk exceeding token length");await this.tokenizer.ignore(r);const o=await this.tokenizer.readToken(new L(i));Q(`Chapter ${s+1}: ${o}`);const c={title:o,sampleOffset:this.findSampleOffset(t,this.tokenizer.position)};Q(`Chapter title=${c.title}, offset=${c.sampleOffset}/${this.tracks[0].duration}`),n.push(c)}this.metadata.setFormat("chapters",n),await this.tokenizer.ignore(a)}findSampleOffset(e,t){let a=0;e.timeToSampleTable.forEach((e=>{a+=e.count*e.duration})),Q(`Total duration=${a}`);let n=0;for(;n<e.chunkOffsetTable.length&&e.chunkOffsetTable[n]<t;)++n;return this.getChunkDuration(n+1,e)}getChunkDuration(e,t){let a=0,n=t.timeToSampleTable[a].count,s=t.timeToSampleTable[a].duration,r=1,i=this.getSamplesPerChunk(r,t.sampleToChunkTable),o=0;for(;r<e;){const e=Math.min(n,i);o+=e*s,n-=e,i-=e,0===i?(++r,i=this.getSamplesPerChunk(r,t.sampleToChunkTable)):(++a,n=t.timeToSampleTable[a].count,s=t.timeToSampleTable[a].duration)}return o}getSamplesPerChunk(e,t){for(let a=0;a<t.length-1;++a)if(e>=t[a].firstChunk&&e<t[a+1].firstChunk)return t[a].samplesPerChunk;return t[t.length-1].samplesPerChunk}}export{Y as MP4Parser};export default null;