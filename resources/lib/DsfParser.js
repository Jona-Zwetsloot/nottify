import e from"./debug.js";import*as t from"./strtok3.js";import{EndOfStreamError as a}from"./strtok3.js";import*as r from"./token-types.js";import{StringType as i,UINT8 as s}from"./token-types.js";import{uint8ArrayToString as n,stringToUint8Array as o}from"./uint8array-extras.js";const c=e=>class extends Error{constructor(t){super(t),this.name=e}};class l extends(c("UnexpectedFileContentError")){constructor(e,t){super(t),this.fileType=e}toString(){return`${this.name} (FileType: ${this.fileType}): ${this.message}`}}class d extends(c("FieldDecodingError")){}class h extends(c("InternalParserError")){}const u=e=>class extends l{constructor(t){super(e,t)}};function g(e,t,a){return!!(e[t]&1<<a)}function p(e,t,a,r){let i=t;if("utf-16le"===r){for(;0!==e[i]||0!==e[i+1];){if(i>=a)return a;i+=2}return i}for(;0!==e[i];){if(i>=a)return a;i++}return i}function m(e,t){if(255===e[0]&&254===e[1])return m(e.subarray(2),t);if("utf-16le"===t&&254===e[0]&&255===e[1]){if(1&e.length)throw new d("Expected even number of octets for 16-bit unicode string");return m(function(e){const t=e.length;if(1&t)throw new d("Buffer length must be even");for(let a=0;a<t;a+=2){const t=e[a];e[a]=e[a+1],e[a+1]=t}return e}(e),t)}return new i(e.length,t).get(e,0)}var f,k,T;!function(e){e[e.Other=0]="Other",e[e["32x32 pixels 'file icon' (PNG only)"]=1]="32x32 pixels 'file icon' (PNG only)",e[e["Other file icon"]=2]="Other file icon",e[e["Cover (front)"]=3]="Cover (front)",e[e["Cover (back)"]=4]="Cover (back)",e[e["Leaflet page"]=5]="Leaflet page",e[e["Media (e.g. label side of CD)"]=6]="Media (e.g. label side of CD)",e[e["Lead artist/lead performer/soloist"]=7]="Lead artist/lead performer/soloist",e[e["Artist/performer"]=8]="Artist/performer",e[e.Conductor=9]="Conductor",e[e["Band/Orchestra"]=10]="Band/Orchestra",e[e.Composer=11]="Composer",e[e["Lyricist/text writer"]=12]="Lyricist/text writer",e[e["Recording Location"]=13]="Recording Location",e[e["During recording"]=14]="During recording",e[e["During performance"]=15]="During performance",e[e["Movie/video screen capture"]=16]="Movie/video screen capture",e[e["A bright coloured fish"]=17]="A bright coloured fish",e[e.Illustration=18]="Illustration",e[e["Band/artist logotype"]=19]="Band/artist logotype",e[e["Publisher/Studio logotype"]=20]="Publisher/Studio logotype"}(f||(f={})),function(e){e[e.other=0]="other",e[e.lyrics=1]="lyrics",e[e.text=2]="text",e[e.movement_part=3]="movement_part",e[e.events=4]="events",e[e.chord=5]="chord",e[e.trivia_pop=6]="trivia_pop"}(k||(k={})),function(e){e[e.notSynchronized0=0]="notSynchronized0",e[e.mpegFrameNumber=1]="mpegFrameNumber",e[e.milliseconds=2]="milliseconds"}(T||(T={}));const y={get:(e,t)=>127&e[t+3]|e[t+2]<<7|e[t+1]<<14|e[t]<<21,len:4},I={len:10,get:(e,t)=>({fileIdentifier:new r.StringType(3,"ascii").get(e,t),version:{major:r.INT8.get(e,t+3),revision:r.INT8.get(e,t+4)},flags:{unsynchronisation:g(e,t+5,7),isExtendedHeader:g(e,t+5,6),expIndicator:g(e,t+5,5),footer:g(e,t+5,4)},size:y.get(e,t+6)})},w={len:10,get:(e,t)=>({size:r.UINT32_BE.get(e,t),extendedFlags:r.UINT16_BE.get(e,t+4),sizeOfPadding:r.UINT32_BE.get(e,t+6),crcDataPresent:g(e,t+4,31)})},v=(e,t)=>{switch(e[t]){case 0:return{encoding:"latin1"};case 1:return{encoding:"utf-16le",bom:!0};case 2:return{encoding:"utf-16le",bom:!1};default:return{encoding:"utf8",bom:!1}}},z=4,b=(e,t)=>({encoding:v(e,t),language:new r.StringType(3,"latin1").get(e,t+1)}),P=6,D=(e,t)=>{const a=b(e,t);return{encoding:a.encoding,language:a.language,timeStampFormat:r.UINT8.get(e,t+4),contentType:r.UINT8.get(e,t+5)}};class E{constructor(e,t,a){this.metadata=e,this.tokenizer=t,this.options=a}}const N=/^[\x21-\x7eÂ©][\x20-\x7e\x00()]{3}/,x={len:4,get:(e,t)=>{const a=n(e.slice(t,t+x.len),"latin1");if(!a.match(N))throw new d(`FourCC contains invalid characters: ${function(e){const t=[];for(let a=0,r=e.length;a<r;a++){const r=Number(e.charCodeAt(a)).toString(16);t.push(1===r.length?`0${r}`:r)}return t.join(" ")}(a)} "${a}"`);return a},put:(e,t,a)=>{const r=o(a);if(4!==r.length)throw new h("Invalid length");return e.set(r,t),t+4}};var F;!function(e){e[e.text_utf8=0]="text_utf8",e[e.binary=1]="binary",e[e.external_info=2]="external_info",e[e.reserved=3]="reserved"}(F||(F={}));const C={len:52,get:(e,t)=>({ID:x.get(e,t),version:r.UINT32_LE.get(e,t+4)/1e3,descriptorBytes:r.UINT32_LE.get(e,t+8),headerBytes:r.UINT32_LE.get(e,t+12),seekTableBytes:r.UINT32_LE.get(e,t+16),headerDataBytes:r.UINT32_LE.get(e,t+20),apeFrameDataBytes:r.UINT32_LE.get(e,t+24),apeFrameDataBytesHigh:r.UINT32_LE.get(e,t+28),terminatingDataBytes:r.UINT32_LE.get(e,t+32),fileMD5:new r.Uint8ArrayType(16).get(e,t+36)})},A={len:24,get:(e,t)=>({compressionLevel:r.UINT16_LE.get(e,t),formatFlags:r.UINT16_LE.get(e,t+2),blocksPerFrame:r.UINT32_LE.get(e,t+4),finalFrameBlocks:r.UINT32_LE.get(e,t+8),totalFrames:r.UINT32_LE.get(e,t+12),bitsPerSample:r.UINT16_LE.get(e,t+16),channel:r.UINT16_LE.get(e,t+18),sampleRate:r.UINT32_LE.get(e,t+20)})},S={len:32,get:(e,t)=>({ID:new r.StringType(8,"ascii").get(e,t),version:r.UINT32_LE.get(e,t+8),size:r.UINT32_LE.get(e,t+12),fields:r.UINT32_LE.get(e,t+16),flags:L(r.UINT32_LE.get(e,t+20))})},B={len:8,get:(e,t)=>({size:r.UINT32_LE.get(e,t),flags:L(r.UINT32_LE.get(e,t+4))})};function L(e){return{containsHeader:_(e,31),containsFooter:_(e,30),isHeader:_(e,29),readOnly:_(e,0),dataType:(6&e)>>1}}function _(e,t){return!!(e&1<<t)}const R=e("music-metadata:parser:APEv2"),H="APEv2",U="APETAGEX";class $ extends(u("APEv2")){}class M extends E{constructor(){super(...arguments),this.ape={}}static tryParseApeHeader(e,t,a){return new M(e,t,a).tryParseApeHeader()}static calculateDuration(e){let t=e.totalFrames>1?e.blocksPerFrame*(e.totalFrames-1):0;return t+=e.finalFrameBlocks,t/e.sampleRate}static async findApeFooterOffset(e,t){const a=new Uint8Array(S.len),r=e.position;await e.readBuffer(a,{position:t-S.len}),e.setPosition(r);const i=S.get(a,0);if("APETAGEX"===i.ID)return i.flags.isHeader?R("APE Header found at offset="+(t-S.len)):(R("APE Footer found at offset="+(t-S.len)),t-=i.size),{footer:i,offset:t}}static parseTagFooter(e,a,r){const i=S.get(a,a.length-S.len);if(i.ID!==U)throw new $("Unexpected APEv2 Footer ID preamble value");t.fromBuffer(a);return new M(e,t.fromBuffer(a),r).parseTags(i)}async tryParseApeHeader(){if(this.tokenizer.fileInfo.size&&this.tokenizer.fileInfo.size-this.tokenizer.position<S.len)return void R("No APEv2 header found, end-of-file reached");const e=await this.tokenizer.peekToken(S);if(e.ID===U)return await this.tokenizer.ignore(S.len),this.parseTags(e);if(R(`APEv2 header not found at offset=${this.tokenizer.position}`),this.tokenizer.fileInfo.size){const e=this.tokenizer.fileInfo.size-this.tokenizer.position,t=new Uint8Array(e);return await this.tokenizer.readBuffer(t),M.parseTagFooter(this.metadata,t,this.options)}}async parse(){const e=await this.tokenizer.readToken(C);if("MAC "!==e.ID)throw new $("Unexpected descriptor ID");this.ape.descriptor=e;const t=e.descriptorBytes-C.len,a=await(t>0?this.parseDescriptorExpansion(t):this.parseHeader());return await this.tokenizer.ignore(a.forwardBytes),this.tryParseApeHeader()}async parseTags(e){const t=new Uint8Array(256);let a=e.size-S.len;R(`Parse APE tags at offset=${this.tokenizer.position}, size=${a}`);for(let r=0;r<e.fields;r++){if(a<B.len){this.metadata.addWarning(`APEv2 Tag-header: ${e.fields-r} items remaining, but no more tag data to read.`);break}const s=await this.tokenizer.readToken(B);a-=B.len+s.size,await this.tokenizer.peekBuffer(t,{length:Math.min(t.length,a)});let o=p(t,0,t.length);const c=await this.tokenizer.readToken(new i(o,"ascii"));switch(await this.tokenizer.ignore(1),a-=c.length+1,s.flags.dataType){case F.text_utf8:{const e=(await this.tokenizer.readToken(new i(s.size,"utf8"))).split(/\x00/g);await Promise.all(e.map((e=>this.metadata.addTag(H,c,e))));break}case F.binary:if(this.options.skipCovers)await this.tokenizer.ignore(s.size);else{const e=new Uint8Array(s.size);await this.tokenizer.readBuffer(e),o=p(e,0,e.length);const t=n(e.slice(0,o)),a=e.slice(o+1);await this.metadata.addTag(H,c,{description:t,data:a})}break;case F.external_info:R(`Ignore external info ${c}`),await this.tokenizer.ignore(s.size);break;case F.reserved:R(`Ignore external info ${c}`),this.metadata.addWarning(`APEv2 header declares a reserved datatype for "${c}"`),await this.tokenizer.ignore(s.size)}}}async parseDescriptorExpansion(e){return await this.tokenizer.ignore(e),this.parseHeader()}async parseHeader(){const e=await this.tokenizer.readToken(A);if(this.metadata.setFormat("lossless",!0),this.metadata.setFormat("container","Monkey's Audio"),this.metadata.setFormat("bitsPerSample",e.bitsPerSample),this.metadata.setFormat("sampleRate",e.sampleRate),this.metadata.setFormat("numberOfChannels",e.channel),this.metadata.setFormat("duration",M.calculateDuration(e)),!this.ape.descriptor)throw new $("Missing APE descriptor");return{forwardBytes:this.ape.descriptor.seekTableBytes+this.ape.descriptor.headerDataBytes+this.ape.descriptor.apeFrameDataBytes+this.ape.descriptor.terminatingDataBytes}}}const O=e("music-metadata:parser:ID3v1"),G=["Blues","Classic Rock","Country","Dance","Disco","Funk","Grunge","Hip-Hop","Jazz","Metal","New Age","Oldies","Other","Pop","R&B","Rap","Reggae","Rock","Techno","Industrial","Alternative","Ska","Death Metal","Pranks","Soundtrack","Euro-Techno","Ambient","Trip-Hop","Vocal","Jazz+Funk","Fusion","Trance","Classical","Instrumental","Acid","House","Game","Sound Clip","Gospel","Noise","Alt. Rock","Bass","Soul","Punk","Space","Meditative","Instrumental Pop","Instrumental Rock","Ethnic","Gothic","Darkwave","Techno-Industrial","Electronic","Pop-Folk","Eurodance","Dream","Southern Rock","Comedy","Cult","Gangsta Rap","Top 40","Christian Rap","Pop/Funk","Jungle","Native American","Cabaret","New Wave","Psychedelic","Rave","Showtunes","Trailer","Lo-Fi","Tribal","Acid Punk","Acid Jazz","Polka","Retro","Musical","Rock & Roll","Hard Rock","Folk","Folk/Rock","National Folk","Swing","Fast-Fusion","Bebob","Latin","Revival","Celtic","Bluegrass","Avantgarde","Gothic Rock","Progressive Rock","Psychedelic Rock","Symphonic Rock","Slow Rock","Big Band","Chorus","Easy Listening","Acoustic","Humour","Speech","Chanson","Opera","Chamber Music","Sonata","Symphony","Booty Bass","Primus","Porn Groove","Satire","Slow Jam","Club","Tango","Samba","Folklore","Ballad","Power Ballad","Rhythmic Soul","Freestyle","Duet","Punk Rock","Drum Solo","A Cappella","Euro-House","Dance Hall","Goa","Drum & Bass","Club-House","Hardcore","Terror","Indie","BritPop","Negerpunk","Polsk Punk","Beat","Christian Gangsta Rap","Heavy Metal","Black Metal","Crossover","Contemporary Christian","Christian Rock","Merengue","Salsa","Thrash Metal","Anime","JPop","Synthpop","Abstract","Art Rock","Baroque","Bhangra","Big Beat","Breakbeat","Chillout","Downtempo","Dub","EBM","Eclectic","Electro","Electroclash","Emo","Experimental","Garage","Global","IDM","Illbient","Industro-Goth","Jam Band","Krautrock","Leftfield","Lounge","Math Rock","New Romantic","Nu-Breakz","Post-Punk","Post-Rock","Psytrance","Shoegaze","Space Rock","Trop Rock","World Music","Neoclassical","Audiobook","Audio Theatre","Neue Deutsche Welle","Podcast","Indie Rock","G-Funk","Dubstep","Garage Rock","Psybient"],W={len:128,get:(e,t)=>{const a=new j(3).get(e,t);return"TAG"===a?{header:a,title:new j(30).get(e,t+3),artist:new j(30).get(e,t+33),album:new j(30).get(e,t+63),year:new j(4).get(e,t+93),comment:new j(28).get(e,t+97),zeroByte:s.get(e,t+127),track:s.get(e,t+126),genre:s.get(e,t+127)}:null}};class j{constructor(e){this.len=e,this.stringType=new i(e,"latin1")}get(e,t){let a=this.stringType.get(e,t);return a=function(e){const t=e.indexOf("\0");return-1===t?e:e.substr(0,t)}(a),a=a.trim(),a.length>0?a:void 0}}class X extends E{constructor(e,t,a){super(e,t,a),this.apeHeader=a.apeHeader}static getGenre(e){if(e<G.length)return G[e]}async parse(){if(!this.tokenizer.fileInfo.size)return void O("Skip checking for ID3v1 because the file-size is unknown");if(this.apeHeader){this.tokenizer.ignore(this.apeHeader.offset-this.tokenizer.position);const e=new M(this.metadata,this.tokenizer,this.options);await e.parseTags(this.apeHeader.footer)}const e=this.tokenizer.fileInfo.size-W.len;if(this.tokenizer.position>e)return void O("Already consumed the last 128 bytes");const t=await this.tokenizer.readToken(W,e);if(t){O("ID3v1 header found at: pos=%s",this.tokenizer.fileInfo.size-W.len);const e=["title","artist","album","comment","track","year"];for(const a of e)t[a]&&""!==t[a]&&await this.addTag(a,t[a]);const a=X.getGenre(t.genre);a&&await this.addTag("genre",a)}else O("ID3v1 header not found at: pos=%s",this.tokenizer.fileInfo.size-W.len)}async addTag(e,t){await this.metadata.addTag("ID3v1",e,t)}}const V=e("music-metadata:id3v2:frame-parser"),q="latin1";function J(e){return"RX"===e?"Remix":"CR"===e?"Cover":e.match(/^\d*$/)?G[Number.parseInt(e)]:void 0}class K{constructor(e,t){this.major=e,this.warningCollector=t}readData(e,t,a){if(0===e.length)return void this.warningCollector.addWarning(`id3v2.${this.major} header has empty tag type=${t}`);const{encoding:i,bom:s}=v(e,0),n=e.length;let o=0,c=[];const l=K.getNullTerminatorLength(i);let d;switch(V(`Parsing tag type=${t}, encoding=${i}, bom=${s}`),"TXXX"!==t&&"T"===t[0]?"T*":t){case"T*":case"GRP1":case"IPLS":case"MVIN":case"MVNM":case"PCS":case"PCST":{let a;try{a=m(e.slice(1),i).replace(/\x00+$/,"")}catch(e){if(e instanceof Error){this.warningCollector.addWarning(`id3v2.${this.major} type=${t} header has invalid string value: ${e.message}`);break}throw e}switch(t){case"TMCL":case"TIPL":case"IPLS":c=K.functionList(this.splitValue(t,a));break;case"TRK":case"TRCK":case"TPOS":c=a;break;case"TCOM":case"TEXT":case"TOLY":case"TOPE":case"TPE1":case"TSRC":c=this.splitValue(t,a);break;case"TCO":case"TCON":c=this.splitValue(t,a).map((e=>function(e){const t=[];let a,r="";for(const i of e)if("string"==typeof a)if("("===i&&""===a)r+="(",a=void 0;else if(")"===i){""!==r&&(t.push(r),r="");const e=J(a);e&&t.push(e),a=void 0}else a+=i;else"("===i?a="":r+=i;return r&&(0===t.length&&r.match(/^\d*$/)&&(r=J(r)),r&&t.push(r)),t}(e))).reduce(((e,t)=>e.concat(t)),[]);break;case"PCS":case"PCST":c=this.major>=4?this.splitValue(t,a):[a],c=Array.isArray(c)&&""===c[0]?1:0;break;default:c=this.major>=4?this.splitValue(t,a):[a]}break}case"TXXX":{const a=K.readIdentifierAndData(e,o+1,n,i);c={description:a.id,text:this.splitValue(t,m(a.data,i).replace(/\x00+$/,""))};break}case"PIC":case"APIC":if(a){const t={};switch(o+=1,this.major){case 2:t.format=m(e.slice(o,o+3),"latin1"),o+=3;break;case 3:case 4:d=p(e,o,n,q),t.format=m(e.slice(o,d),q),o=d+1;break;default:throw function(e){throw new Y(`Unexpected majorVer: ${e}`)}(this.major)}t.format=K.fixPictureMimeType(t.format),t.type=f[e[o]],o+=1,d=p(e,o,n,i),t.description=m(e.slice(o,d),i),o=d+l,t.data=e.slice(o,n),c=t}break;case"CNT":case"PCNT":c=r.UINT32_BE.get(e,0);break;case"SYLT":{const t=D(e,0);o+=P;const a={descriptor:"",language:t.language,contentType:t.contentType,timeStampFormat:t.timeStampFormat,syncText:[]};let i=!1;for(;o<n;){const s=K.readNullTerminatedString(e.subarray(o),t.encoding);if(o+=s.len,i){const t=r.UINT32_BE.get(e,o);o+=r.UINT32_BE.len,a.syncText.push({text:s.text,timestamp:t})}else a.descriptor=s.text,i=!0}c=a;break}case"ULT":case"USLT":case"COM":case"COMM":{const t=b(e,o);o+=z;const a=K.readNullTerminatedString(e.subarray(o),t.encoding);o+=a.len;const r=K.readNullTerminatedString(e.subarray(o),t.encoding);c={language:t.language,descriptor:a.text,text:r.text};break}case"UFID":{const t=K.readIdentifierAndData(e,o,n,q);c={owner_identifier:t.id,identifier:t.data};break}case"PRIV":{const t=K.readIdentifierAndData(e,o,n,q);c={owner_identifier:t.id,data:t.data};break}case"POPM":{d=p(e,o,n,q);const t=m(e.slice(o,d),q);o=d+1;const a=n-o;c={email:t,rating:r.UINT8.get(e,o),counter:a>=5?r.UINT32_BE.get(e,o+1):void 0};break}case"GEOB":{d=p(e,o+1,n,i);const t=m(e.slice(o+1,d),q);o=d+1,d=p(e,o,n,i);const a=m(e.slice(o,d),q);o=d+1,d=p(e,o,n,i);const r=m(e.slice(o,d),q);o=d+1;c={type:t,filename:a,description:r,data:e.slice(o,n)};break}case"WCOM":case"WCOP":case"WOAF":case"WOAR":case"WOAS":case"WORS":case"WPAY":case"WPUB":d=p(e,o+1,n,i),c=m(e.slice(o,d),q);break;case"WXXX":{d=p(e,o+1,n,i);const t=m(e.slice(o+1,d),i);o=d+("utf-16le"===i?2:1),c={description:t,url:m(e.slice(o,n),q)};break}case"WFD":case"WFED":c=m(e.slice(o+1,p(e,o+1,n,i)),i);break;case"MCDI":c=e.slice(0,n);break;default:V(`Warning: unsupported id3v2-tag-type: ${t}`)}return c}static readNullTerminatedString(e,t){let a=t.bom?2:0;const r=p(e,a,e.length,t.encoding),i=e.slice(a,r);return a="utf-16le"===t.encoding?r+2:r+1,{text:m(i,t.encoding),len:a}}static fixPictureMimeType(e){switch(e=e.toLocaleLowerCase()){case"jpg":return"image/jpeg";case"png":return"image/png"}return e}static functionList(e){const t={};for(let a=0;a+1<e.length;a+=2){const r=e[a+1].split(",");t[e[a]]=t[e[a]]?t[e[a]].concat(r):r}return t}splitValue(e,t){let a;return this.major<4?(a=t.split(/\x00/g),a.length>1?this.warningCollector.addWarning(`ID3v2.${this.major} ${e} uses non standard null-separator.`):a=t.split(/\//g)):a=t.split(/\x00/g),K.trimArray(a)}static trimArray(e){return e.map((e=>e.replace(/\x00+$/,"").trim()))}static readIdentifierAndData(e,t,a,r){const i=p(e,t,a,r),s=m(e.slice(t,i),r);return t=i+K.getNullTerminatorLength(r),{id:s,data:e.slice(t,a)}}static getNullTerminatorLength(e){return"utf-16le"===e?2:1}}class Y extends(u("id3v2")){}const Z=new TextDecoder("ascii");class Q{constructor(){this.tokenizer=void 0,this.id3Header=void 0,this.metadata=void 0,this.headerType=void 0,this.options=void 0}static removeUnsyncBytes(e){let t=0,a=0;for(;t<e.length-1;)t!==a&&(e[a]=e[t]),t+=255===e[t]&&0===e[t+1]?2:1,a++;return t<e.length&&(e[a++]=e[t]),e.slice(0,a)}static getFrameHeaderLength(e){switch(e){case 2:return 6;case 3:case 4:return 10;default:throw ee(e)}}static readFrameFlags(e){return{status:{tag_alter_preservation:g(e,0,6),file_alter_preservation:g(e,0,5),read_only:g(e,0,4)},format:{grouping_identity:g(e,1,7),compression:g(e,1,3),encryption:g(e,1,2),unsynchronisation:g(e,1,1),data_length_indicator:g(e,1,0)}}}static readFrameData(e,t,a,r,i){const s=new K(a,i);switch(a){case 2:return s.readData(e,t.id,r);case 3:case 4:return t.flags?.format.unsynchronisation&&(e=Q.removeUnsyncBytes(e)),t.flags?.format.data_length_indicator&&(e=e.slice(4,e.length)),s.readData(e,t.id,r);default:throw ee(a)}}static makeDescriptionTagName(e,t){return e+(t?`:${t}`:"")}async parse(e,t,a){this.tokenizer=t,this.metadata=e,this.options=a;const r=await this.tokenizer.readToken(I);if("ID3"!==r.fileIdentifier)throw new Y("expected ID3-header file-identifier 'ID3' was not found");return this.id3Header=r,this.headerType=`ID3v2.${r.version.major}`,r.flags.isExtendedHeader?this.parseExtendedHeader():this.parseId3Data(r.size)}async parseExtendedHeader(){const e=await this.tokenizer.readToken(w),t=e.size-w.len;return t>0?this.parseExtendedHeaderData(t,e.size):this.parseId3Data(this.id3Header.size-e.size)}async parseExtendedHeaderData(e,t){return await this.tokenizer.ignore(e),this.parseId3Data(this.id3Header.size-t)}async parseId3Data(e){const t=await this.tokenizer.readToken(new r.Uint8ArrayType(e));for(const e of this.parseMetadata(t))if("TXXX"===e.id)e.value&&await this.handleTag(e,e.value.text,(()=>e.value.description));else await(Array.isArray(e.value)?Promise.all(e.value.map((t=>this.addTag(e.id,t)))):this.addTag(e.id,e.value))}async handleTag(e,t,a,r=e=>e){await Promise.all(t.map((t=>this.addTag(Q.makeDescriptionTagName(e.id,a(t)),r(t)))))}async addTag(e,t){await this.metadata.addTag(this.headerType,e,t)}parseMetadata(e){let t=0;const a=[];for(;t!==e.length;){const r=Q.getFrameHeaderLength(this.id3Header.version.major);if(t+r>e.length){this.metadata.addWarning("Illegal ID3v2 tag length");break}const i=e.slice(t,t+r);t+=r;const s=this.readFrameHeader(i,this.id3Header.version.major),n=e.slice(t,t+s.length);t+=s.length;const o=Q.readFrameData(n,s,this.id3Header.version.major,!this.options.skipCovers,this.metadata);o&&a.push({id:s.id,value:o})}return a}readFrameHeader(e,t){let a;switch(t){case 2:a={id:Z.decode(e.slice(0,3)),length:r.UINT24_BE.get(e,3)},a.id.match(/[A-Z0-9]{3}/g)||this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${a.id}`);break;case 3:case 4:a={id:Z.decode(e.slice(0,4)),length:(4===t?y:r.UINT32_BE).get(e,4),flags:Q.readFrameFlags(e.slice(8,10))},a.id.match(/[A-Z0-9]{4}/g)||this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${a.id}`);break;default:throw ee(t)}return a}}function ee(e){throw new Y(`Unexpected majorVer: ${e}`)}const te=e("music-metadata:parser:ID3");class ae extends E{constructor(){super(...arguments),this.id3parser=new Q}static async startsWithID3v2Header(e){return"ID3"===(await e.peekToken(I)).fileIdentifier}async parse(){try{await this.parseID3v2()}catch(e){if(!(e instanceof a))throw e;te("End-of-stream")}}finalize(){}async parseID3v2(){if(await this.tryReadId3v2Headers(),te("End of ID3v2 header, go to MPEG-parser: pos=%s",this.tokenizer.position),await this.postId3v2Parse(),this.options.skipPostHeaders&&this.metadata.hasAny())this.finalize();else{const e=new X(this.metadata,this.tokenizer,this.options);await e.parse(),this.finalize()}}async tryReadId3v2Headers(){if("ID3"===(await this.tokenizer.peekToken(I)).fileIdentifier)return te("Found ID3v2 header, pos=%s",this.tokenizer.position),await this.id3parser.parse(this.metadata,this.tokenizer,this.options),this.tryReadId3v2Headers()}}const re={len:12,get:(e,t)=>({id:x.get(e,t),size:r.UINT64_LE.get(e,t+4)})},ie={len:16,get:(e,t)=>({fileSize:r.INT64_LE.get(e,t),metadataPointer:r.INT64_LE.get(e,t+8)})};var se;!function(e){e[e.mono=1]="mono",e[e.stereo=2]="stereo",e[e.channels=3]="channels",e[e.quad=4]="quad",e[e["4 channels"]=5]="4 channels",e[e["5 channels"]=6]="5 channels",e[e["5.1 channels"]=7]="5.1 channels"}(se||(se={}));const ne={len:40,get:(e,t)=>({formatVersion:r.INT32_LE.get(e,t),formatID:r.INT32_LE.get(e,t+4),channelType:r.INT32_LE.get(e,t+8),channelNum:r.INT32_LE.get(e,t+12),samplingFrequency:r.INT32_LE.get(e,t+16),bitsPerSample:r.INT32_LE.get(e,t+20),sampleCount:r.INT64_LE.get(e,t+24),blockSizePerChannel:r.INT32_LE.get(e,t+32)})},oe=e("music-metadata:parser:DSF");class ce extends(u("DSD")){}class le extends ae{async postId3v2Parse(){const e=this.tokenizer.position,t=await this.tokenizer.readToken(re);if("DSD "!==t.id)throw new ce("Invalid chunk signature");this.metadata.setFormat("container","DSF"),this.metadata.setFormat("lossless",!0);const a=await this.tokenizer.readToken(ie);if(a.metadataPointer!==BigInt(0))return oe(`expect ID3v2 at offset=${a.metadataPointer}`),await this.parseChunks(a.fileSize-t.size),await this.tokenizer.ignore(Number(a.metadataPointer)-this.tokenizer.position-e),(new Q).parse(this.metadata,this.tokenizer,this.options);oe("No ID3v2 tag present")}async parseChunks(e){for(;e>=re.len;){const t=await this.tokenizer.readToken(re);if(oe(`Parsing chunk name=${t.id} size=${t.size}`),"fmt "===t.id){const e=await this.tokenizer.readToken(ne);this.metadata.setFormat("numberOfChannels",e.channelNum),this.metadata.setFormat("sampleRate",e.samplingFrequency),this.metadata.setFormat("bitsPerSample",e.bitsPerSample),this.metadata.setFormat("numberOfSamples",e.sampleCount),this.metadata.setFormat("duration",Number(e.sampleCount)/e.samplingFrequency);const t=e.bitsPerSample*e.samplingFrequency*e.channelNum;return void this.metadata.setFormat("bitrate",t)}this.tokenizer.ignore(Number(t.size)-re.len),e-=t.size}}}export{ce as DsdContentParseError,le as DsfParser};export default null;