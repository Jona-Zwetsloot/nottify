import*as e from"./strtok3.js";import*as t from"./token-types.js";import{StringType as a}from"./token-types.js";import i from"./debug.js";import{uint8ArrayToString as r,stringToUint8Array as n}from"./uint8array-extras.js";const s={len:8,get:(e,a)=>({chunkID:new t.StringType(4,"latin1").get(e,a),chunkSize:t.UINT32_LE.get(e,a+4)})};class o{constructor(e){this.tagHeader=e,this.len=e.chunkSize,this.len+=1&this.len}get(e,a){return new t.StringType(this.tagHeader.chunkSize,"ascii").get(e,a)}}const c=e=>class extends Error{constructor(t){super(t),this.name=e}};class l extends(c("UnexpectedFileContentError")){constructor(e,t){super(t),this.fileType=e}toString(){return`${this.name} (FileType: ${this.fileType}): ${this.message}`}}class d extends(c("FieldDecodingError")){}class h extends(c("InternalParserError")){}const u=e=>class extends l{constructor(t){super(e,t)}};class g extends(u("Wave")){}var m,p,f,k;!function(e){e[e.PCM=1]="PCM",e[e.ADPCM=2]="ADPCM",e[e.IEEE_FLOAT=3]="IEEE_FLOAT",e[e.MPEG_ADTS_AAC=5632]="MPEG_ADTS_AAC",e[e.MPEG_LOAS=5634]="MPEG_LOAS",e[e.RAW_AAC1=255]="RAW_AAC1",e[e.DOLBY_AC3_SPDIF=146]="DOLBY_AC3_SPDIF",e[e.DVM=8192]="DVM",e[e.RAW_SPORT=576]="RAW_SPORT",e[e.ESST_AC3=577]="ESST_AC3",e[e.DRM=9]="DRM",e[e.DTS2=8193]="DTS2",e[e.MPEG=80]="MPEG"}(m||(m={}));class T{constructor(e){if(e.chunkSize<16)throw new g("Invalid chunk size");this.len=e.chunkSize}get(e,a){return{wFormatTag:t.UINT16_LE.get(e,a),nChannels:t.UINT16_LE.get(e,a+2),nSamplesPerSec:t.UINT32_LE.get(e,a+4),nAvgBytesPerSec:t.UINT32_LE.get(e,a+8),nBlockAlign:t.UINT16_LE.get(e,a+12),wBitsPerSample:t.UINT16_LE.get(e,a+14)}}}class I{constructor(e){if(e.chunkSize<4)throw new g("Invalid fact chunk size.");this.len=e.chunkSize}get(e,a){return{dwSampleLength:t.UINT32_LE.get(e,a)}}}function w(e,t,a){return!!(e[t]&1<<a)}function S(e,t,a,i){let r=t;if("utf-16le"===i){for(;0!==e[r]||0!==e[r+1];){if(r>=a)return a;r+=2}return r}for(;0!==e[r];){if(r>=a)return a;r++}return r}function y(e,t){if(255===e[0]&&254===e[1])return y(e.subarray(2),t);if("utf-16le"===t&&254===e[0]&&255===e[1]){if(1&e.length)throw new d("Expected even number of octets for 16-bit unicode string");return y(function(e){const t=e.length;if(1&t)throw new d("Buffer length must be even");for(let a=0;a<t;a+=2){const t=e[a];e[a]=e[a+1],e[a+1]=t}return e}(e),t)}return new a(e.length,t).get(e,0)}function b(e){return e=(e=e.replace(/^\x00+/g,"")).replace(/\x00+$/g,"")}!function(e){e[e.Other=0]="Other",e[e["32x32 pixels 'file icon' (PNG only)"]=1]="32x32 pixels 'file icon' (PNG only)",e[e["Other file icon"]=2]="Other file icon",e[e["Cover (front)"]=3]="Cover (front)",e[e["Cover (back)"]=4]="Cover (back)",e[e["Leaflet page"]=5]="Leaflet page",e[e["Media (e.g. label side of CD)"]=6]="Media (e.g. label side of CD)",e[e["Lead artist/lead performer/soloist"]=7]="Lead artist/lead performer/soloist",e[e["Artist/performer"]=8]="Artist/performer",e[e.Conductor=9]="Conductor",e[e["Band/Orchestra"]=10]="Band/Orchestra",e[e.Composer=11]="Composer",e[e["Lyricist/text writer"]=12]="Lyricist/text writer",e[e["Recording Location"]=13]="Recording Location",e[e["During recording"]=14]="During recording",e[e["During performance"]=15]="During performance",e[e["Movie/video screen capture"]=16]="Movie/video screen capture",e[e["A bright coloured fish"]=17]="A bright coloured fish",e[e.Illustration=18]="Illustration",e[e["Band/artist logotype"]=19]="Band/artist logotype",e[e["Publisher/Studio logotype"]=20]="Publisher/Studio logotype"}(p||(p={})),function(e){e[e.other=0]="other",e[e.lyrics=1]="lyrics",e[e.text=2]="text",e[e.movement_part=3]="movement_part",e[e.events=4]="events",e[e.chord=5]="chord",e[e.trivia_pop=6]="trivia_pop"}(f||(f={})),function(e){e[e.notSynchronized0=0]="notSynchronized0",e[e.mpegFrameNumber=1]="mpegFrameNumber",e[e.milliseconds=2]="milliseconds"}(k||(k={}));const v={get:(e,t)=>127&e[t+3]|e[t+2]<<7|e[t+1]<<14|e[t]<<21,len:4},D={len:10,get:(e,a)=>({fileIdentifier:new t.StringType(3,"ascii").get(e,a),version:{major:t.INT8.get(e,a+3),revision:t.INT8.get(e,a+4)},flags:{unsynchronisation:w(e,a+5,7),isExtendedHeader:w(e,a+5,6),expIndicator:w(e,a+5,5),footer:w(e,a+5,4)},size:v.get(e,a+6)})},C={len:10,get:(e,a)=>({size:t.UINT32_BE.get(e,a),extendedFlags:t.UINT16_BE.get(e,a+4),sizeOfPadding:t.UINT32_BE.get(e,a+6),crcDataPresent:w(e,a+4,31)})},F=(e,t)=>{switch(e[t]){case 0:return{encoding:"latin1"};case 1:return{encoding:"utf-16le",bom:!0};case 2:return{encoding:"utf-16le",bom:!1};default:return{encoding:"utf8",bom:!1}}},P=4,A=(e,a)=>({encoding:F(e,a),language:new t.StringType(3,"latin1").get(e,a+1)}),R=6,E=(e,a)=>{const i=A(e,a);return{encoding:i.encoding,language:i.language,timeStampFormat:t.UINT8.get(e,a+4),contentType:t.UINT8.get(e,a+5)}};class z{constructor(e,t,a){this.metadata=e,this.tokenizer=t,this.options=a}}const x=/^[\x21-\x7eÂ©][\x20-\x7e\x00()]{3}/,L={len:4,get:(e,t)=>{const a=r(e.slice(t,t+L.len),"latin1");if(!a.match(x))throw new d(`FourCC contains invalid characters: ${function(e){const t=[];for(let a=0,i=e.length;a<i;a++){const i=Number(e.charCodeAt(a)).toString(16);t.push(1===i.length?`0${i}`:i)}return t.join(" ")}(a)} "${a}"`);return a},put:(e,t,a)=>{const i=n(a);if(4!==i.length)throw new h("Invalid length");return e.set(i,t),t+4}};var _;!function(e){e[e.text_utf8=0]="text_utf8",e[e.binary=1]="binary",e[e.external_info=2]="external_info",e[e.reserved=3]="reserved"}(_||(_={})),i("music-metadata:parser:APEv2"),i("music-metadata:parser:ID3v1");const N=["Blues","Classic Rock","Country","Dance","Disco","Funk","Grunge","Hip-Hop","Jazz","Metal","New Age","Oldies","Other","Pop","R&B","Rap","Reggae","Rock","Techno","Industrial","Alternative","Ska","Death Metal","Pranks","Soundtrack","Euro-Techno","Ambient","Trip-Hop","Vocal","Jazz+Funk","Fusion","Trance","Classical","Instrumental","Acid","House","Game","Sound Clip","Gospel","Noise","Alt. Rock","Bass","Soul","Punk","Space","Meditative","Instrumental Pop","Instrumental Rock","Ethnic","Gothic","Darkwave","Techno-Industrial","Electronic","Pop-Folk","Eurodance","Dream","Southern Rock","Comedy","Cult","Gangsta Rap","Top 40","Christian Rap","Pop/Funk","Jungle","Native American","Cabaret","New Wave","Psychedelic","Rave","Showtunes","Trailer","Lo-Fi","Tribal","Acid Punk","Acid Jazz","Polka","Retro","Musical","Rock & Roll","Hard Rock","Folk","Folk/Rock","National Folk","Swing","Fast-Fusion","Bebob","Latin","Revival","Celtic","Bluegrass","Avantgarde","Gothic Rock","Progressive Rock","Psychedelic Rock","Symphonic Rock","Slow Rock","Big Band","Chorus","Easy Listening","Acoustic","Humour","Speech","Chanson","Opera","Chamber Music","Sonata","Symphony","Booty Bass","Primus","Porn Groove","Satire","Slow Jam","Club","Tango","Samba","Folklore","Ballad","Power Ballad","Rhythmic Soul","Freestyle","Duet","Punk Rock","Drum Solo","A Cappella","Euro-House","Dance Hall","Goa","Drum & Bass","Club-House","Hardcore","Terror","Indie","BritPop","Negerpunk","Polsk Punk","Beat","Christian Gangsta Rap","Heavy Metal","Black Metal","Crossover","Contemporary Christian","Christian Rock","Merengue","Salsa","Thrash Metal","Anime","JPop","Synthpop","Abstract","Art Rock","Baroque","Bhangra","Big Beat","Breakbeat","Chillout","Downtempo","Dub","EBM","Eclectic","Electro","Electroclash","Emo","Experimental","Garage","Global","IDM","Illbient","Industro-Goth","Jam Band","Krautrock","Leftfield","Lounge","Math Rock","New Romantic","Nu-Breakz","Post-Punk","Post-Rock","Psytrance","Shoegaze","Space Rock","Trop Rock","World Music","Neoclassical","Audiobook","Audio Theatre","Neue Deutsche Welle","Podcast","Indie Rock","G-Funk","Dubstep","Garage Rock","Psybient"],B=i("music-metadata:id3v2:frame-parser"),M="latin1";function $(e){return"RX"===e?"Remix":"CR"===e?"Cover":e.match(/^\d*$/)?N[Number.parseInt(e)]:void 0}class U{constructor(e,t){this.major=e,this.warningCollector=t}readData(e,a,i){if(0===e.length)return void this.warningCollector.addWarning(`id3v2.${this.major} header has empty tag type=${a}`);const{encoding:r,bom:n}=F(e,0),s=e.length;let o=0,c=[];const l=U.getNullTerminatorLength(r);let d;switch(B(`Parsing tag type=${a}, encoding=${r}, bom=${n}`),"TXXX"!==a&&"T"===a[0]?"T*":a){case"T*":case"GRP1":case"IPLS":case"MVIN":case"MVNM":case"PCS":case"PCST":{let t;try{t=y(e.slice(1),r).replace(/\x00+$/,"")}catch(e){if(e instanceof Error){this.warningCollector.addWarning(`id3v2.${this.major} type=${a} header has invalid string value: ${e.message}`);break}throw e}switch(a){case"TMCL":case"TIPL":case"IPLS":c=U.functionList(this.splitValue(a,t));break;case"TRK":case"TRCK":case"TPOS":c=t;break;case"TCOM":case"TEXT":case"TOLY":case"TOPE":case"TPE1":case"TSRC":c=this.splitValue(a,t);break;case"TCO":case"TCON":c=this.splitValue(a,t).map((e=>function(e){const t=[];let a,i="";for(const r of e)if("string"==typeof a)if("("===r&&""===a)i+="(",a=void 0;else if(")"===r){""!==i&&(t.push(i),i="");const e=$(a);e&&t.push(e),a=void 0}else a+=r;else"("===r?a="":i+=r;return i&&(0===t.length&&i.match(/^\d*$/)&&(i=$(i)),i&&t.push(i)),t}(e))).reduce(((e,t)=>e.concat(t)),[]);break;case"PCS":case"PCST":c=this.major>=4?this.splitValue(a,t):[t],c=Array.isArray(c)&&""===c[0]?1:0;break;default:c=this.major>=4?this.splitValue(a,t):[t]}break}case"TXXX":{const t=U.readIdentifierAndData(e,o+1,s,r);c={description:t.id,text:this.splitValue(a,y(t.data,r).replace(/\x00+$/,""))};break}case"PIC":case"APIC":if(i){const t={};switch(o+=1,this.major){case 2:t.format=y(e.slice(o,o+3),"latin1"),o+=3;break;case 3:case 4:d=S(e,o,s,M),t.format=y(e.slice(o,d),M),o=d+1;break;default:throw function(e){throw new O(`Unexpected majorVer: ${e}`)}(this.major)}t.format=U.fixPictureMimeType(t.format),t.type=p[e[o]],o+=1,d=S(e,o,s,r),t.description=y(e.slice(o,d),r),o=d+l,t.data=e.slice(o,s),c=t}break;case"CNT":case"PCNT":c=t.UINT32_BE.get(e,0);break;case"SYLT":{const a=E(e,0);o+=R;const i={descriptor:"",language:a.language,contentType:a.contentType,timeStampFormat:a.timeStampFormat,syncText:[]};let r=!1;for(;o<s;){const n=U.readNullTerminatedString(e.subarray(o),a.encoding);if(o+=n.len,r){const a=t.UINT32_BE.get(e,o);o+=t.UINT32_BE.len,i.syncText.push({text:n.text,timestamp:a})}else i.descriptor=n.text,r=!0}c=i;break}case"ULT":case"USLT":case"COM":case"COMM":{const t=A(e,o);o+=P;const a=U.readNullTerminatedString(e.subarray(o),t.encoding);o+=a.len;const i=U.readNullTerminatedString(e.subarray(o),t.encoding);c={language:t.language,descriptor:a.text,text:i.text};break}case"UFID":{const t=U.readIdentifierAndData(e,o,s,M);c={owner_identifier:t.id,identifier:t.data};break}case"PRIV":{const t=U.readIdentifierAndData(e,o,s,M);c={owner_identifier:t.id,data:t.data};break}case"POPM":{d=S(e,o,s,M);const a=y(e.slice(o,d),M);o=d+1;const i=s-o;c={email:a,rating:t.UINT8.get(e,o),counter:i>=5?t.UINT32_BE.get(e,o+1):void 0};break}case"GEOB":{d=S(e,o+1,s,r);const t=y(e.slice(o+1,d),M);o=d+1,d=S(e,o,s,r);const a=y(e.slice(o,d),M);o=d+1,d=S(e,o,s,r);const i=y(e.slice(o,d),M);o=d+1;c={type:t,filename:a,description:i,data:e.slice(o,s)};break}case"WCOM":case"WCOP":case"WOAF":case"WOAR":case"WOAS":case"WORS":case"WPAY":case"WPUB":d=S(e,o+1,s,r),c=y(e.slice(o,d),M);break;case"WXXX":{d=S(e,o+1,s,r);const t=y(e.slice(o+1,d),r);o=d+("utf-16le"===r?2:1),c={description:t,url:y(e.slice(o,s),M)};break}case"WFD":case"WFED":c=y(e.slice(o+1,S(e,o+1,s,r)),r);break;case"MCDI":c=e.slice(0,s);break;default:B(`Warning: unsupported id3v2-tag-type: ${a}`)}return c}static readNullTerminatedString(e,t){let a=t.bom?2:0;const i=S(e,a,e.length,t.encoding),r=e.slice(a,i);return a="utf-16le"===t.encoding?i+2:i+1,{text:y(r,t.encoding),len:a}}static fixPictureMimeType(e){switch(e=e.toLocaleLowerCase()){case"jpg":return"image/jpeg";case"png":return"image/png"}return e}static functionList(e){const t={};for(let a=0;a+1<e.length;a+=2){const i=e[a+1].split(",");t[e[a]]=t[e[a]]?t[e[a]].concat(i):i}return t}splitValue(e,t){let a;return this.major<4?(a=t.split(/\x00/g),a.length>1?this.warningCollector.addWarning(`ID3v2.${this.major} ${e} uses non standard null-separator.`):a=t.split(/\//g)):a=t.split(/\x00/g),U.trimArray(a)}static trimArray(e){return e.map((e=>e.replace(/\x00+$/,"").trim()))}static readIdentifierAndData(e,t,a,i){const r=S(e,t,a,i),n=y(e.slice(t,r),i);return t=r+U.getNullTerminatorLength(i),{id:n,data:e.slice(t,a)}}static getNullTerminatorLength(e){return"utf-16le"===e?2:1}}class O extends(u("id3v2")){}const W=new TextDecoder("ascii");class H{constructor(){this.tokenizer=void 0,this.id3Header=void 0,this.metadata=void 0,this.headerType=void 0,this.options=void 0}static removeUnsyncBytes(e){let t=0,a=0;for(;t<e.length-1;)t!==a&&(e[a]=e[t]),t+=255===e[t]&&0===e[t+1]?2:1,a++;return t<e.length&&(e[a++]=e[t]),e.slice(0,a)}static getFrameHeaderLength(e){switch(e){case 2:return 6;case 3:case 4:return 10;default:throw G(e)}}static readFrameFlags(e){return{status:{tag_alter_preservation:w(e,0,6),file_alter_preservation:w(e,0,5),read_only:w(e,0,4)},format:{grouping_identity:w(e,1,7),compression:w(e,1,3),encryption:w(e,1,2),unsynchronisation:w(e,1,1),data_length_indicator:w(e,1,0)}}}static readFrameData(e,t,a,i,r){const n=new U(a,r);switch(a){case 2:return n.readData(e,t.id,i);case 3:case 4:return t.flags?.format.unsynchronisation&&(e=H.removeUnsyncBytes(e)),t.flags?.format.data_length_indicator&&(e=e.slice(4,e.length)),n.readData(e,t.id,i);default:throw G(a)}}static makeDescriptionTagName(e,t){return e+(t?`:${t}`:"")}async parse(e,t,a){this.tokenizer=t,this.metadata=e,this.options=a;const i=await this.tokenizer.readToken(D);if("ID3"!==i.fileIdentifier)throw new O("expected ID3-header file-identifier 'ID3' was not found");return this.id3Header=i,this.headerType=`ID3v2.${i.version.major}`,i.flags.isExtendedHeader?this.parseExtendedHeader():this.parseId3Data(i.size)}async parseExtendedHeader(){const e=await this.tokenizer.readToken(C),t=e.size-C.len;return t>0?this.parseExtendedHeaderData(t,e.size):this.parseId3Data(this.id3Header.size-e.size)}async parseExtendedHeaderData(e,t){return await this.tokenizer.ignore(e),this.parseId3Data(this.id3Header.size-t)}async parseId3Data(e){const a=await this.tokenizer.readToken(new t.Uint8ArrayType(e));for(const e of this.parseMetadata(a))if("TXXX"===e.id)e.value&&await this.handleTag(e,e.value.text,(()=>e.value.description));else await(Array.isArray(e.value)?Promise.all(e.value.map((t=>this.addTag(e.id,t)))):this.addTag(e.id,e.value))}async handleTag(e,t,a,i=e=>e){await Promise.all(t.map((t=>this.addTag(H.makeDescriptionTagName(e.id,a(t)),i(t)))))}async addTag(e,t){await this.metadata.addTag(this.headerType,e,t)}parseMetadata(e){let t=0;const a=[];for(;t!==e.length;){const i=H.getFrameHeaderLength(this.id3Header.version.major);if(t+i>e.length){this.metadata.addWarning("Illegal ID3v2 tag length");break}const r=e.slice(t,t+i);t+=i;const n=this.readFrameHeader(r,this.id3Header.version.major),s=e.slice(t,t+n.length);t+=n.length;const o=H.readFrameData(s,n,this.id3Header.version.major,!this.options.skipCovers,this.metadata);o&&a.push({id:n.id,value:o})}return a}readFrameHeader(e,a){let i;switch(a){case 2:i={id:W.decode(e.slice(0,3)),length:t.UINT24_BE.get(e,3)},i.id.match(/[A-Z0-9]{3}/g)||this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${i.id}`);break;case 3:case 4:i={id:W.decode(e.slice(0,4)),length:(4===a?v:t.UINT32_BE).get(e,4),flags:H.readFrameFlags(e.slice(8,10))},i.id.match(/[A-Z0-9]{4}/g)||this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${i.id}`);break;default:throw G(a)}return i}}function G(e){throw new O(`Unexpected majorVer: ${e}`)}const j={len:420,get:(e,a)=>({description:b(new t.StringType(256,"ascii").get(e,a)).trim(),originator:b(new t.StringType(32,"ascii").get(e,a+256)).trim(),originatorReference:b(new t.StringType(32,"ascii").get(e,a+288)).trim(),originationDate:b(new t.StringType(10,"ascii").get(e,a+320)).trim(),originationTime:b(new t.StringType(8,"ascii").get(e,a+330)).trim(),timeReferenceLow:t.UINT32_LE.get(e,a+338),timeReferenceHigh:t.UINT32_LE.get(e,a+342),version:t.UINT16_LE.get(e,a+346),umid:new t.Uint8ArrayType(64).get(e,a+348),loudnessValue:t.UINT16_LE.get(e,a+412),maxTruePeakLevel:t.UINT16_LE.get(e,a+414),maxMomentaryLoudness:t.UINT16_LE.get(e,a+416),maxShortTermLoudness:t.UINT16_LE.get(e,a+418)})},V=i("music-metadata:parser:RIFF");class X extends z{constructor(){super(...arguments),this.blockAlign=0}async parse(){const t=await this.tokenizer.readToken(s);if(V(`pos=${this.tokenizer.position}, parse: chunkID=${t.chunkID}`),"RIFF"===t.chunkID)return this.parseRiffChunk(t.chunkSize).catch((t=>{if(!(t instanceof e.EndOfStreamError))throw t}))}async parseRiffChunk(e){const t=await this.tokenizer.readToken(L);if(this.metadata.setFormat("container",t),"WAVE"===t)return this.readWaveChunk(e-L.len);throw new g(`Unsupported RIFF format: RIFF/${t}`)}async readWaveChunk(a){for(;a>=s.len;){const i=await this.tokenizer.readToken(s);switch(a-=s.len+i.chunkSize,i.chunkSize>a&&this.metadata.addWarning("Data chunk size exceeds file size"),this.header=i,V(`pos=${this.tokenizer.position}, readChunk: chunkID=RIFF/WAVE/${i.chunkID}`),i.chunkID){case"LIST":await this.parseListTag(i);break;case"fact":this.metadata.setFormat("lossless",!1),this.fact=await this.tokenizer.readToken(new I(i));break;case"fmt ":{const e=await this.tokenizer.readToken(new T(i));let t=m[e.wFormatTag];t||(V(`WAVE/non-PCM format=${e.wFormatTag}`),t=`non-PCM (${e.wFormatTag})`),this.metadata.setFormat("codec",t),this.metadata.setFormat("bitsPerSample",e.wBitsPerSample),this.metadata.setFormat("sampleRate",e.nSamplesPerSec),this.metadata.setFormat("numberOfChannels",e.nChannels),this.metadata.setFormat("bitrate",e.nBlockAlign*e.nSamplesPerSec*8),this.blockAlign=e.nBlockAlign;break}case"id3 ":case"ID3 ":{const a=await this.tokenizer.readToken(new t.Uint8ArrayType(i.chunkSize)),r=e.fromBuffer(a);await(new H).parse(this.metadata,r,this.options);break}case"data":{!1!==this.metadata.format.lossless&&this.metadata.setFormat("lossless",!0);let e=i.chunkSize;if(this.tokenizer.fileInfo.size){const t=this.tokenizer.fileInfo.size-this.tokenizer.position;t<e&&(this.metadata.addWarning("data chunk length exceeding file length"),e=t)}const t=this.fact?this.fact.dwSampleLength:4294967295===e?void 0:e/this.blockAlign;t&&(this.metadata.setFormat("numberOfSamples",t),this.metadata.format.sampleRate&&this.metadata.setFormat("duration",t/this.metadata.format.sampleRate)),"ADPCM"===this.metadata.format.codec?this.metadata.setFormat("bitrate",352e3):this.metadata.format.sampleRate&&this.metadata.setFormat("bitrate",this.blockAlign*this.metadata.format.sampleRate*8),await this.tokenizer.ignore(i.chunkSize);break}case"bext":{const e=await this.tokenizer.readToken(j);Object.keys(e).forEach((t=>{this.metadata.addTag("exif",`bext.${t}`,e[t])}));const t=i.chunkSize-j.len;await this.tokenizer.ignore(t);break}case"\0\0\0\0":V(`Ignore padding chunk: RIFF/${i.chunkID} of ${i.chunkSize} bytes`),this.metadata.addWarning(`Ignore chunk: RIFF/${i.chunkID}`),await this.tokenizer.ignore(i.chunkSize);break;default:V(`Ignore chunk: RIFF/${i.chunkID} of ${i.chunkSize} bytes`),this.metadata.addWarning(`Ignore chunk: RIFF/${i.chunkID}`),await this.tokenizer.ignore(i.chunkSize)}this.header.chunkSize%2==1&&(V("Read odd padding byte"),await this.tokenizer.ignore(1))}}async parseListTag(e){const a=await this.tokenizer.readToken(new t.StringType(4,"latin1"));return V("pos=%s, parseListTag: chunkID=RIFF/WAVE/LIST/%s",this.tokenizer.position,a),"INFO"===a?this.parseRiffInfoTags(e.chunkSize-4):(this.metadata.addWarning(`Ignore chunk: RIFF/WAVE/LIST/${a}`),V(`Ignoring chunkID=RIFF/WAVE/LIST/${a}`),this.tokenizer.ignore(e.chunkSize-4).then())}async parseRiffInfoTags(e){for(;e>=8;){const t=await this.tokenizer.readToken(s),a=new o(t),i=await this.tokenizer.readToken(a);this.addTag(t.chunkID,b(i)),e-=8+a.len}if(0!==e)throw new g(`Illegal remaining size: ${e}`)}addTag(e,t){this.metadata.addTag("exif",e,t)}}export{X as WaveParser};export default null;