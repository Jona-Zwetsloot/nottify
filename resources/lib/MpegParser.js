import*as e from"./token-types.js";import{StringType as t,UINT8 as a}from"./token-types.js";import*as i from"./strtok3.js";import{EndOfStreamError as r}from"./strtok3.js";import s from"./debug.js";import{uint8ArrayToString as n,stringToUint8Array as o}from"./uint8array-extras.js";const c=e=>class extends Error{constructor(t){super(t),this.name=e}};class l extends(c("UnexpectedFileContentError")){constructor(e,t){super(t),this.fileType=e}toString(){return`${this.name} (FileType: ${this.fileType}): ${this.message}`}}class d extends(c("FieldDecodingError")){}class h extends(c("InternalParserError")){}const m=e=>class extends l{constructor(t){super(e,t)}};function u(e,t,a){return!!(e[t]&1<<a)}function f(e,t,a,i){let r=t;if("utf-16le"===i){for(;0!==e[r]||0!==e[r+1];){if(r>=a)return a;r+=2}return r}for(;0!==e[r];){if(r>=a)return a;r++}return r}function p(e,a){if(255===e[0]&&254===e[1])return p(e.subarray(2),a);if("utf-16le"===a&&254===e[0]&&255===e[1]){if(1&e.length)throw new d("Expected even number of octets for 16-bit unicode string");return p(function(e){const t=e.length;if(1&t)throw new d("Buffer length must be even");for(let a=0;a<t;a+=2){const t=e[a];e[a]=e[a+1],e[a+1]=t}return e}(e),a)}return new t(e.length,a).get(e,0)}function g(e,t,a,i){const r=a%8;let s=e[t+~~(a/8)];s&=255>>r;const n=8-r,o=i-n;return o<0?s>>=8-r-i:o>0&&(s<<=o,s|=g(e,t,a+n,o)),s}function k(e,t,a){return 1===g(e,t,a,1)}var y,w,T;!function(e){e[e.Other=0]="Other",e[e["32x32 pixels 'file icon' (PNG only)"]=1]="32x32 pixels 'file icon' (PNG only)",e[e["Other file icon"]=2]="Other file icon",e[e["Cover (front)"]=3]="Cover (front)",e[e["Cover (back)"]=4]="Cover (back)",e[e["Leaflet page"]=5]="Leaflet page",e[e["Media (e.g. label side of CD)"]=6]="Media (e.g. label side of CD)",e[e["Lead artist/lead performer/soloist"]=7]="Lead artist/lead performer/soloist",e[e["Artist/performer"]=8]="Artist/performer",e[e.Conductor=9]="Conductor",e[e["Band/Orchestra"]=10]="Band/Orchestra",e[e.Composer=11]="Composer",e[e["Lyricist/text writer"]=12]="Lyricist/text writer",e[e["Recording Location"]=13]="Recording Location",e[e["During recording"]=14]="During recording",e[e["During performance"]=15]="During performance",e[e["Movie/video screen capture"]=16]="Movie/video screen capture",e[e["A bright coloured fish"]=17]="A bright coloured fish",e[e.Illustration=18]="Illustration",e[e["Band/artist logotype"]=19]="Band/artist logotype",e[e["Publisher/Studio logotype"]=20]="Publisher/Studio logotype"}(y||(y={})),function(e){e[e.other=0]="other",e[e.lyrics=1]="lyrics",e[e.text=2]="text",e[e.movement_part=3]="movement_part",e[e.events=4]="events",e[e.chord=5]="chord",e[e.trivia_pop=6]="trivia_pop"}(w||(w={})),function(e){e[e.notSynchronized0=0]="notSynchronized0",e[e.mpegFrameNumber=1]="mpegFrameNumber",e[e.milliseconds=2]="milliseconds"}(T||(T={}));const I={get:(e,t)=>127&e[t+3]|e[t+2]<<7|e[t+1]<<14|e[t]<<21,len:4},v={len:10,get:(t,a)=>({fileIdentifier:new e.StringType(3,"ascii").get(t,a),version:{major:e.INT8.get(t,a+3),revision:e.INT8.get(t,a+4)},flags:{unsynchronisation:u(t,a+5,7),isExtendedHeader:u(t,a+5,6),expIndicator:u(t,a+5,5),footer:u(t,a+5,4)},size:I.get(t,a+6)})},b={len:10,get:(t,a)=>({size:e.UINT32_BE.get(t,a),extendedFlags:e.UINT16_BE.get(t,a+4),sizeOfPadding:e.UINT32_BE.get(t,a+6),crcDataPresent:u(t,a+4,31)})},z=(e,t)=>{switch(e[t]){case 0:return{encoding:"latin1"};case 1:return{encoding:"utf-16le",bom:!0};case 2:return{encoding:"utf-16le",bom:!1};default:return{encoding:"utf8",bom:!1}}},F=4,P=(t,a)=>({encoding:z(t,a),language:new e.StringType(3,"latin1").get(t,a+1)}),C=6,x=(t,a)=>{const i=P(t,a);return{encoding:i.encoding,language:i.language,timeStampFormat:e.UINT8.get(t,a+4),contentType:e.UINT8.get(t,a+5)}};class _{constructor(e,t,a){this.metadata=e,this.tokenizer=t,this.options=a}}const D=/^[\x21-\x7eÂ©][\x20-\x7e\x00()]{3}/,E={len:4,get:(e,t)=>{const a=n(e.slice(t,t+E.len),"latin1");if(!a.match(D))throw new d(`FourCC contains invalid characters: ${function(e){const t=[];for(let a=0,i=e.length;a<i;a++){const i=Number(e.charCodeAt(a)).toString(16);t.push(1===i.length?`0${i}`:i)}return t.join(" ")}(a)} "${a}"`);return a},put:(e,t,a)=>{const i=o(a);if(4!==i.length)throw new h("Invalid length");return e.set(i,t),t+4}};var A;!function(e){e[e.text_utf8=0]="text_utf8",e[e.binary=1]="binary",e[e.external_info=2]="external_info",e[e.reserved=3]="reserved"}(A||(A={}));const S={len:52,get:(t,a)=>({ID:E.get(t,a),version:e.UINT32_LE.get(t,a+4)/1e3,descriptorBytes:e.UINT32_LE.get(t,a+8),headerBytes:e.UINT32_LE.get(t,a+12),seekTableBytes:e.UINT32_LE.get(t,a+16),headerDataBytes:e.UINT32_LE.get(t,a+20),apeFrameDataBytes:e.UINT32_LE.get(t,a+24),apeFrameDataBytesHigh:e.UINT32_LE.get(t,a+28),terminatingDataBytes:e.UINT32_LE.get(t,a+32),fileMD5:new e.Uint8ArrayType(16).get(t,a+36)})},B={len:24,get:(t,a)=>({compressionLevel:e.UINT16_LE.get(t,a),formatFlags:e.UINT16_LE.get(t,a+2),blocksPerFrame:e.UINT32_LE.get(t,a+4),finalFrameBlocks:e.UINT32_LE.get(t,a+8),totalFrames:e.UINT32_LE.get(t,a+12),bitsPerSample:e.UINT16_LE.get(t,a+16),channel:e.UINT16_LE.get(t,a+18),sampleRate:e.UINT32_LE.get(t,a+20)})},R={len:32,get:(t,a)=>({ID:new e.StringType(8,"ascii").get(t,a),version:e.UINT32_LE.get(t,a+8),size:e.UINT32_LE.get(t,a+12),fields:e.UINT32_LE.get(t,a+16),flags:N(e.UINT32_LE.get(t,a+20))})},L={len:8,get:(t,a)=>({size:e.UINT32_LE.get(t,a),flags:N(e.UINT32_LE.get(t,a+4))})};function N(e){return{containsHeader:H(e,31),containsFooter:H(e,30),isHeader:H(e,29),readOnly:H(e,0),dataType:(6&e)>>1}}function H(e,t){return!!(e&1<<t)}const M=s("music-metadata:parser:APEv2"),U="APEv2",$="APETAGEX";class O extends(m("APEv2")){}class G extends _{constructor(){super(...arguments),this.ape={}}static tryParseApeHeader(e,t,a){return new G(e,t,a).tryParseApeHeader()}static calculateDuration(e){let t=e.totalFrames>1?e.blocksPerFrame*(e.totalFrames-1):0;return t+=e.finalFrameBlocks,t/e.sampleRate}static async findApeFooterOffset(e,t){const a=new Uint8Array(R.len),i=e.position;await e.readBuffer(a,{position:t-R.len}),e.setPosition(i);const r=R.get(a,0);if("APETAGEX"===r.ID)return r.flags.isHeader?M("APE Header found at offset="+(t-R.len)):(M("APE Footer found at offset="+(t-R.len)),t-=r.size),{footer:r,offset:t}}static parseTagFooter(e,t,a){const r=R.get(t,t.length-R.len);if(r.ID!==$)throw new O("Unexpected APEv2 Footer ID preamble value");i.fromBuffer(t);return new G(e,i.fromBuffer(t),a).parseTags(r)}async tryParseApeHeader(){if(this.tokenizer.fileInfo.size&&this.tokenizer.fileInfo.size-this.tokenizer.position<R.len)return void M("No APEv2 header found, end-of-file reached");const e=await this.tokenizer.peekToken(R);if(e.ID===$)return await this.tokenizer.ignore(R.len),this.parseTags(e);if(M(`APEv2 header not found at offset=${this.tokenizer.position}`),this.tokenizer.fileInfo.size){const e=this.tokenizer.fileInfo.size-this.tokenizer.position,t=new Uint8Array(e);return await this.tokenizer.readBuffer(t),G.parseTagFooter(this.metadata,t,this.options)}}async parse(){const e=await this.tokenizer.readToken(S);if("MAC "!==e.ID)throw new O("Unexpected descriptor ID");this.ape.descriptor=e;const t=e.descriptorBytes-S.len,a=await(t>0?this.parseDescriptorExpansion(t):this.parseHeader());return await this.tokenizer.ignore(a.forwardBytes),this.tryParseApeHeader()}async parseTags(e){const a=new Uint8Array(256);let i=e.size-R.len;M(`Parse APE tags at offset=${this.tokenizer.position}, size=${i}`);for(let r=0;r<e.fields;r++){if(i<L.len){this.metadata.addWarning(`APEv2 Tag-header: ${e.fields-r} items remaining, but no more tag data to read.`);break}const s=await this.tokenizer.readToken(L);i-=L.len+s.size,await this.tokenizer.peekBuffer(a,{length:Math.min(a.length,i)});let o=f(a,0,a.length);const c=await this.tokenizer.readToken(new t(o,"ascii"));switch(await this.tokenizer.ignore(1),i-=c.length+1,s.flags.dataType){case A.text_utf8:{const e=(await this.tokenizer.readToken(new t(s.size,"utf8"))).split(/\x00/g);await Promise.all(e.map((e=>this.metadata.addTag(U,c,e))));break}case A.binary:if(this.options.skipCovers)await this.tokenizer.ignore(s.size);else{const e=new Uint8Array(s.size);await this.tokenizer.readBuffer(e),o=f(e,0,e.length);const t=n(e.slice(0,o)),a=e.slice(o+1);await this.metadata.addTag(U,c,{description:t,data:a})}break;case A.external_info:M(`Ignore external info ${c}`),await this.tokenizer.ignore(s.size);break;case A.reserved:M(`Ignore external info ${c}`),this.metadata.addWarning(`APEv2 header declares a reserved datatype for "${c}"`),await this.tokenizer.ignore(s.size)}}}async parseDescriptorExpansion(e){return await this.tokenizer.ignore(e),this.parseHeader()}async parseHeader(){const e=await this.tokenizer.readToken(B);if(this.metadata.setFormat("lossless",!0),this.metadata.setFormat("container","Monkey's Audio"),this.metadata.setFormat("bitsPerSample",e.bitsPerSample),this.metadata.setFormat("sampleRate",e.sampleRate),this.metadata.setFormat("numberOfChannels",e.channel),this.metadata.setFormat("duration",G.calculateDuration(e)),!this.ape.descriptor)throw new O("Missing APE descriptor");return{forwardBytes:this.ape.descriptor.seekTableBytes+this.ape.descriptor.headerDataBytes+this.ape.descriptor.apeFrameDataBytes+this.ape.descriptor.terminatingDataBytes}}}const j=s("music-metadata:parser:ID3v1"),W=["Blues","Classic Rock","Country","Dance","Disco","Funk","Grunge","Hip-Hop","Jazz","Metal","New Age","Oldies","Other","Pop","R&B","Rap","Reggae","Rock","Techno","Industrial","Alternative","Ska","Death Metal","Pranks","Soundtrack","Euro-Techno","Ambient","Trip-Hop","Vocal","Jazz+Funk","Fusion","Trance","Classical","Instrumental","Acid","House","Game","Sound Clip","Gospel","Noise","Alt. Rock","Bass","Soul","Punk","Space","Meditative","Instrumental Pop","Instrumental Rock","Ethnic","Gothic","Darkwave","Techno-Industrial","Electronic","Pop-Folk","Eurodance","Dream","Southern Rock","Comedy","Cult","Gangsta Rap","Top 40","Christian Rap","Pop/Funk","Jungle","Native American","Cabaret","New Wave","Psychedelic","Rave","Showtunes","Trailer","Lo-Fi","Tribal","Acid Punk","Acid Jazz","Polka","Retro","Musical","Rock & Roll","Hard Rock","Folk","Folk/Rock","National Folk","Swing","Fast-Fusion","Bebob","Latin","Revival","Celtic","Bluegrass","Avantgarde","Gothic Rock","Progressive Rock","Psychedelic Rock","Symphonic Rock","Slow Rock","Big Band","Chorus","Easy Listening","Acoustic","Humour","Speech","Chanson","Opera","Chamber Music","Sonata","Symphony","Booty Bass","Primus","Porn Groove","Satire","Slow Jam","Club","Tango","Samba","Folklore","Ballad","Power Ballad","Rhythmic Soul","Freestyle","Duet","Punk Rock","Drum Solo","A Cappella","Euro-House","Dance Hall","Goa","Drum & Bass","Club-House","Hardcore","Terror","Indie","BritPop","Negerpunk","Polsk Punk","Beat","Christian Gangsta Rap","Heavy Metal","Black Metal","Crossover","Contemporary Christian","Christian Rock","Merengue","Salsa","Thrash Metal","Anime","JPop","Synthpop","Abstract","Art Rock","Baroque","Bhangra","Big Beat","Breakbeat","Chillout","Downtempo","Dub","EBM","Eclectic","Electro","Electroclash","Emo","Experimental","Garage","Global","IDM","Illbient","Industro-Goth","Jam Band","Krautrock","Leftfield","Lounge","Math Rock","New Romantic","Nu-Breakz","Post-Punk","Post-Rock","Psytrance","Shoegaze","Space Rock","Trop Rock","World Music","Neoclassical","Audiobook","Audio Theatre","Neue Deutsche Welle","Podcast","Indie Rock","G-Funk","Dubstep","Garage Rock","Psybient"],X={len:128,get:(e,t)=>{const i=new V(3).get(e,t);return"TAG"===i?{header:i,title:new V(30).get(e,t+3),artist:new V(30).get(e,t+33),album:new V(30).get(e,t+63),year:new V(4).get(e,t+93),comment:new V(28).get(e,t+97),zeroByte:a.get(e,t+127),track:a.get(e,t+126),genre:a.get(e,t+127)}:null}};class V{constructor(e){this.len=e,this.stringType=new t(e,"latin1")}get(e,t){let a=this.stringType.get(e,t);return a=function(e){const t=e.indexOf("\0");return-1===t?e:e.substr(0,t)}(a),a=a.trim(),a.length>0?a:void 0}}class q extends _{constructor(e,t,a){super(e,t,a),this.apeHeader=a.apeHeader}static getGenre(e){if(e<W.length)return W[e]}async parse(){if(!this.tokenizer.fileInfo.size)return void j("Skip checking for ID3v1 because the file-size is unknown");if(this.apeHeader){this.tokenizer.ignore(this.apeHeader.offset-this.tokenizer.position);const e=new G(this.metadata,this.tokenizer,this.options);await e.parseTags(this.apeHeader.footer)}const e=this.tokenizer.fileInfo.size-X.len;if(this.tokenizer.position>e)return void j("Already consumed the last 128 bytes");const t=await this.tokenizer.readToken(X,e);if(t){j("ID3v1 header found at: pos=%s",this.tokenizer.fileInfo.size-X.len);const e=["title","artist","album","comment","track","year"];for(const a of e)t[a]&&""!==t[a]&&await this.addTag(a,t[a]);const a=q.getGenre(t.genre);a&&await this.addTag("genre",a)}else j("ID3v1 header not found at: pos=%s",this.tokenizer.fileInfo.size-X.len)}async addTag(e,t){await this.metadata.addTag("ID3v1",e,t)}}const J=s("music-metadata:id3v2:frame-parser"),K="latin1";function Y(e){return"RX"===e?"Remix":"CR"===e?"Cover":e.match(/^\d*$/)?W[Number.parseInt(e)]:void 0}class Z{constructor(e,t){this.major=e,this.warningCollector=t}readData(t,a,i){if(0===t.length)return void this.warningCollector.addWarning(`id3v2.${this.major} header has empty tag type=${a}`);const{encoding:r,bom:s}=z(t,0),n=t.length;let o=0,c=[];const l=Z.getNullTerminatorLength(r);let d;switch(J(`Parsing tag type=${a}, encoding=${r}, bom=${s}`),"TXXX"!==a&&"T"===a[0]?"T*":a){case"T*":case"GRP1":case"IPLS":case"MVIN":case"MVNM":case"PCS":case"PCST":{let e;try{e=p(t.slice(1),r).replace(/\x00+$/,"")}catch(e){if(e instanceof Error){this.warningCollector.addWarning(`id3v2.${this.major} type=${a} header has invalid string value: ${e.message}`);break}throw e}switch(a){case"TMCL":case"TIPL":case"IPLS":c=Z.functionList(this.splitValue(a,e));break;case"TRK":case"TRCK":case"TPOS":c=e;break;case"TCOM":case"TEXT":case"TOLY":case"TOPE":case"TPE1":case"TSRC":c=this.splitValue(a,e);break;case"TCO":case"TCON":c=this.splitValue(a,e).map((e=>function(e){const t=[];let a,i="";for(const r of e)if("string"==typeof a)if("("===r&&""===a)i+="(",a=void 0;else if(")"===r){""!==i&&(t.push(i),i="");const e=Y(a);e&&t.push(e),a=void 0}else a+=r;else"("===r?a="":i+=r;return i&&(0===t.length&&i.match(/^\d*$/)&&(i=Y(i)),i&&t.push(i)),t}(e))).reduce(((e,t)=>e.concat(t)),[]);break;case"PCS":case"PCST":c=this.major>=4?this.splitValue(a,e):[e],c=Array.isArray(c)&&""===c[0]?1:0;break;default:c=this.major>=4?this.splitValue(a,e):[e]}break}case"TXXX":{const e=Z.readIdentifierAndData(t,o+1,n,r);c={description:e.id,text:this.splitValue(a,p(e.data,r).replace(/\x00+$/,""))};break}case"PIC":case"APIC":if(i){const e={};switch(o+=1,this.major){case 2:e.format=p(t.slice(o,o+3),"latin1"),o+=3;break;case 3:case 4:d=f(t,o,n,K),e.format=p(t.slice(o,d),K),o=d+1;break;default:throw function(e){throw new Q(`Unexpected majorVer: ${e}`)}(this.major)}e.format=Z.fixPictureMimeType(e.format),e.type=y[t[o]],o+=1,d=f(t,o,n,r),e.description=p(t.slice(o,d),r),o=d+l,e.data=t.slice(o,n),c=e}break;case"CNT":case"PCNT":c=e.UINT32_BE.get(t,0);break;case"SYLT":{const a=x(t,0);o+=C;const i={descriptor:"",language:a.language,contentType:a.contentType,timeStampFormat:a.timeStampFormat,syncText:[]};let r=!1;for(;o<n;){const s=Z.readNullTerminatedString(t.subarray(o),a.encoding);if(o+=s.len,r){const a=e.UINT32_BE.get(t,o);o+=e.UINT32_BE.len,i.syncText.push({text:s.text,timestamp:a})}else i.descriptor=s.text,r=!0}c=i;break}case"ULT":case"USLT":case"COM":case"COMM":{const e=P(t,o);o+=F;const a=Z.readNullTerminatedString(t.subarray(o),e.encoding);o+=a.len;const i=Z.readNullTerminatedString(t.subarray(o),e.encoding);c={language:e.language,descriptor:a.text,text:i.text};break}case"UFID":{const e=Z.readIdentifierAndData(t,o,n,K);c={owner_identifier:e.id,identifier:e.data};break}case"PRIV":{const e=Z.readIdentifierAndData(t,o,n,K);c={owner_identifier:e.id,data:e.data};break}case"POPM":{d=f(t,o,n,K);const a=p(t.slice(o,d),K);o=d+1;const i=n-o;c={email:a,rating:e.UINT8.get(t,o),counter:i>=5?e.UINT32_BE.get(t,o+1):void 0};break}case"GEOB":{d=f(t,o+1,n,r);const e=p(t.slice(o+1,d),K);o=d+1,d=f(t,o,n,r);const a=p(t.slice(o,d),K);o=d+1,d=f(t,o,n,r);const i=p(t.slice(o,d),K);o=d+1;c={type:e,filename:a,description:i,data:t.slice(o,n)};break}case"WCOM":case"WCOP":case"WOAF":case"WOAR":case"WOAS":case"WORS":case"WPAY":case"WPUB":d=f(t,o+1,n,r),c=p(t.slice(o,d),K);break;case"WXXX":{d=f(t,o+1,n,r);const e=p(t.slice(o+1,d),r);o=d+("utf-16le"===r?2:1),c={description:e,url:p(t.slice(o,n),K)};break}case"WFD":case"WFED":c=p(t.slice(o+1,f(t,o+1,n,r)),r);break;case"MCDI":c=t.slice(0,n);break;default:J(`Warning: unsupported id3v2-tag-type: ${a}`)}return c}static readNullTerminatedString(e,t){let a=t.bom?2:0;const i=f(e,a,e.length,t.encoding),r=e.slice(a,i);return a="utf-16le"===t.encoding?i+2:i+1,{text:p(r,t.encoding),len:a}}static fixPictureMimeType(e){switch(e=e.toLocaleLowerCase()){case"jpg":return"image/jpeg";case"png":return"image/png"}return e}static functionList(e){const t={};for(let a=0;a+1<e.length;a+=2){const i=e[a+1].split(",");t[e[a]]=t[e[a]]?t[e[a]].concat(i):i}return t}splitValue(e,t){let a;return this.major<4?(a=t.split(/\x00/g),a.length>1?this.warningCollector.addWarning(`ID3v2.${this.major} ${e} uses non standard null-separator.`):a=t.split(/\//g)):a=t.split(/\x00/g),Z.trimArray(a)}static trimArray(e){return e.map((e=>e.replace(/\x00+$/,"").trim()))}static readIdentifierAndData(e,t,a,i){const r=f(e,t,a,i),s=p(e.slice(t,r),i);return t=r+Z.getNullTerminatorLength(i),{id:s,data:e.slice(t,a)}}static getNullTerminatorLength(e){return"utf-16le"===e?2:1}}class Q extends(m("id3v2")){}const ee=new TextDecoder("ascii");class te{constructor(){this.tokenizer=void 0,this.id3Header=void 0,this.metadata=void 0,this.headerType=void 0,this.options=void 0}static removeUnsyncBytes(e){let t=0,a=0;for(;t<e.length-1;)t!==a&&(e[a]=e[t]),t+=255===e[t]&&0===e[t+1]?2:1,a++;return t<e.length&&(e[a++]=e[t]),e.slice(0,a)}static getFrameHeaderLength(e){switch(e){case 2:return 6;case 3:case 4:return 10;default:throw ae(e)}}static readFrameFlags(e){return{status:{tag_alter_preservation:u(e,0,6),file_alter_preservation:u(e,0,5),read_only:u(e,0,4)},format:{grouping_identity:u(e,1,7),compression:u(e,1,3),encryption:u(e,1,2),unsynchronisation:u(e,1,1),data_length_indicator:u(e,1,0)}}}static readFrameData(e,t,a,i,r){const s=new Z(a,r);switch(a){case 2:return s.readData(e,t.id,i);case 3:case 4:return t.flags?.format.unsynchronisation&&(e=te.removeUnsyncBytes(e)),t.flags?.format.data_length_indicator&&(e=e.slice(4,e.length)),s.readData(e,t.id,i);default:throw ae(a)}}static makeDescriptionTagName(e,t){return e+(t?`:${t}`:"")}async parse(e,t,a){this.tokenizer=t,this.metadata=e,this.options=a;const i=await this.tokenizer.readToken(v);if("ID3"!==i.fileIdentifier)throw new Q("expected ID3-header file-identifier 'ID3' was not found");return this.id3Header=i,this.headerType=`ID3v2.${i.version.major}`,i.flags.isExtendedHeader?this.parseExtendedHeader():this.parseId3Data(i.size)}async parseExtendedHeader(){const e=await this.tokenizer.readToken(b),t=e.size-b.len;return t>0?this.parseExtendedHeaderData(t,e.size):this.parseId3Data(this.id3Header.size-e.size)}async parseExtendedHeaderData(e,t){return await this.tokenizer.ignore(e),this.parseId3Data(this.id3Header.size-t)}async parseId3Data(t){const a=await this.tokenizer.readToken(new e.Uint8ArrayType(t));for(const e of this.parseMetadata(a))if("TXXX"===e.id)e.value&&await this.handleTag(e,e.value.text,(()=>e.value.description));else await(Array.isArray(e.value)?Promise.all(e.value.map((t=>this.addTag(e.id,t)))):this.addTag(e.id,e.value))}async handleTag(e,t,a,i=e=>e){await Promise.all(t.map((t=>this.addTag(te.makeDescriptionTagName(e.id,a(t)),i(t)))))}async addTag(e,t){await this.metadata.addTag(this.headerType,e,t)}parseMetadata(e){let t=0;const a=[];for(;t!==e.length;){const i=te.getFrameHeaderLength(this.id3Header.version.major);if(t+i>e.length){this.metadata.addWarning("Illegal ID3v2 tag length");break}const r=e.slice(t,t+i);t+=i;const s=this.readFrameHeader(r,this.id3Header.version.major),n=e.slice(t,t+s.length);t+=s.length;const o=te.readFrameData(n,s,this.id3Header.version.major,!this.options.skipCovers,this.metadata);o&&a.push({id:s.id,value:o})}return a}readFrameHeader(t,a){let i;switch(a){case 2:i={id:ee.decode(t.slice(0,3)),length:e.UINT24_BE.get(t,3)},i.id.match(/[A-Z0-9]{3}/g)||this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${i.id}`);break;case 3:case 4:i={id:ee.decode(t.slice(0,4)),length:(4===a?I:e.UINT32_BE).get(t,4),flags:te.readFrameFlags(t.slice(8,10))},i.id.match(/[A-Z0-9]{4}/g)||this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${i.id}`);break;default:throw ae(a)}return i}}function ae(e){throw new Q(`Unexpected majorVer: ${e}`)}const ie=s("music-metadata:parser:ID3");class re extends _{constructor(){super(...arguments),this.id3parser=new te}static async startsWithID3v2Header(e){return"ID3"===(await e.peekToken(v)).fileIdentifier}async parse(){try{await this.parseID3v2()}catch(e){if(!(e instanceof r))throw e;ie("End-of-stream")}}finalize(){}async parseID3v2(){if(await this.tryReadId3v2Headers(),ie("End of ID3v2 header, go to MPEG-parser: pos=%s",this.tokenizer.position),await this.postId3v2Parse(),this.options.skipPostHeaders&&this.metadata.hasAny())this.finalize();else{const e=new q(this.metadata,this.tokenizer,this.options);await e.parse(),this.finalize()}}async tryReadId3v2Headers(){if("ID3"===(await this.tokenizer.peekToken(v)).fileIdentifier)return ie("Found ID3v2 header, pos=%s",this.tokenizer.position),await this.id3parser.parse(this.metadata,this.tokenizer,this.options),this.tryReadId3v2Headers()}}var se,ne;!function(e){e[e.not_set=0]="not_set",e[e.radio=1]="radio",e[e.audiophile=2]="audiophile"}(se||(se={})),function(e){e[e.unspecified=0]="unspecified",e[e.engineer=1]="engineer",e[e.user=2]="user",e[e.automatic=3]="automatic",e[e.rms_average=4]="rms_average"}(ne||(ne={}));const oe=(e,t)=>{const a=g(e,t,0,3),i=g(e,t,6,1),r=g(e,t,7,9)/10;if(a>0)return{type:g(e,t,0,3),origin:g(e,t,3,3),adjustment:i?-r:r}},ce={len:27,get:(t,a)=>{const i=e.UINT32_BE.get(t,a+2);return{revision:g(t,a,0,4),vbr_method:g(t,a,4,4),lowpass_filter:100*e.UINT8.get(t,a+1),track_peak:0===i?null:i/2**23,track_gain:oe(t,6),album_gain:oe(t,8),music_length:e.UINT32_BE.get(t,a+20),music_crc:e.UINT8.get(t,a+24),header_crc:e.UINT16_BE.get(t,a+24)}}},le=new e.StringType(4,"ascii"),de=new e.StringType(6,"ascii"),he={len:4,get:(e,t)=>({frames:k(e,t,31),bytes:k(e,t,30),toc:k(e,t,29),vbrScale:k(e,t,28)})};const me=s("music-metadata:parser:mpeg");class ue extends(m("MPEG")){}const fe={AudioObjectTypes:["AAC Main","AAC LC","AAC SSR","AAC LTP"],SamplingFrequencies:[96e3,88200,64e3,48e3,44100,32e3,24e3,22050,16e3,12e3,11025,8e3,7350,null,null,-1]},pe=[void 0,["front-center"],["front-left","front-right"],["front-center","front-left","front-right"],["front-center","front-left","front-right","back-center"],["front-center","front-left","front-right","back-left","back-right"],["front-center","front-left","front-right","back-left","back-right","LFE-channel"],["front-center","front-left","front-right","side-left","side-right","back-left","back-right","LFE-channel"]];class ge{constructor(e,t){this.bitrateIndex=null,this.sampRateFreqIndex=null,this.padding=null,this.privateBit=null,this.channelModeIndex=null,this.modeExtension=null,this.isOriginalMedia=null,this.version=null,this.bitrate=null,this.samplingRate=null,this.frameLength=0,this.versionIndex=g(e,t+1,3,2),this.layer=ge.LayerDescription[g(e,t+1,5,2)],this.versionIndex>1&&0===this.layer?this.parseAdtsHeader(e,t):this.parseMpegHeader(e,t),this.isProtectedByCRC=!k(e,t+1,7)}calcDuration(e){return null==this.samplingRate?null:e*this.calcSamplesPerFrame()/this.samplingRate}calcSamplesPerFrame(){return ge.samplesInFrameTable[1===this.version?0:1][this.layer]}calculateSideInfoLength(){if(3!==this.layer)return 2;if(3===this.channelModeIndex){if(1===this.version)return 17;if(2===this.version||2.5===this.version)return 9}else{if(1===this.version)return 32;if(2===this.version||2.5===this.version)return 17}return null}calcSlotSize(){return[null,4,1,1][this.layer]}parseMpegHeader(e,t){this.container="MPEG",this.bitrateIndex=g(e,t+2,0,4),this.sampRateFreqIndex=g(e,t+2,4,2),this.padding=k(e,t+2,6),this.privateBit=k(e,t+2,7),this.channelModeIndex=g(e,t+3,0,2),this.modeExtension=g(e,t+3,2,2),this.isCopyrighted=k(e,t+3,4),this.isOriginalMedia=k(e,t+3,5),this.emphasis=g(e,t+3,7,2),this.version=ge.VersionID[this.versionIndex],this.channelMode=ge.ChannelMode[this.channelModeIndex],this.codec=`MPEG ${this.version} Layer ${this.layer}`;const a=this.calcBitrate();if(!a)throw new ue("Cannot determine bit-rate");if(this.bitrate=1e3*a,this.samplingRate=this.calcSamplingRate(),null==this.samplingRate)throw new ue("Cannot determine sampling-rate")}parseAdtsHeader(e,t){me("layer=0 => ADTS"),this.version=2===this.versionIndex?4:2,this.container=`ADTS/MPEG-${this.version}`;const a=g(e,t+2,0,2);this.codec="AAC",this.codecProfile=fe.AudioObjectTypes[a],me(`MPEG-4 audio-codec=${this.codec}`);const i=g(e,t+2,2,4);this.samplingRate=fe.SamplingFrequencies[i],me(`sampling-rate=${this.samplingRate}`);const r=g(e,t+2,7,3);this.mp4ChannelConfig=pe[r],me(`channel-config=${this.mp4ChannelConfig?this.mp4ChannelConfig.join("+"):"?"}`),this.frameLength=g(e,t+3,6,2)<<11}calcBitrate(){if(0===this.bitrateIndex||15===this.bitrateIndex)return null;if(this.version&&this.bitrateIndex){const e=10*Math.floor(this.version)+this.layer;return ge.bitrate_index[this.bitrateIndex][e]}return null}calcSamplingRate(){return 3===this.sampRateFreqIndex||null===this.version||null==this.sampRateFreqIndex?null:ge.sampling_rate_freq_index[this.version][this.sampRateFreqIndex]}}ge.SyncByte1=255,ge.SyncByte2=224,ge.VersionID=[2.5,null,2,1],ge.LayerDescription=[0,3,2,1],ge.ChannelMode=["stereo","joint_stereo","dual_channel","mono"],ge.bitrate_index={1:{11:32,12:32,13:32,21:32,22:8,23:8},2:{11:64,12:48,13:40,21:48,22:16,23:16},3:{11:96,12:56,13:48,21:56,22:24,23:24},4:{11:128,12:64,13:56,21:64,22:32,23:32},5:{11:160,12:80,13:64,21:80,22:40,23:40},6:{11:192,12:96,13:80,21:96,22:48,23:48},7:{11:224,12:112,13:96,21:112,22:56,23:56},8:{11:256,12:128,13:112,21:128,22:64,23:64},9:{11:288,12:160,13:128,21:144,22:80,23:80},10:{11:320,12:192,13:160,21:160,22:96,23:96},11:{11:352,12:224,13:192,21:176,22:112,23:112},12:{11:384,12:256,13:224,21:192,22:128,23:128},13:{11:416,12:320,13:256,21:224,22:144,23:144},14:{11:448,12:384,13:320,21:256,22:160,23:160}},ge.sampling_rate_freq_index={1:{0:44100,1:48e3,2:32e3},2:{0:22050,1:24e3,2:16e3},2.5:{0:11025,1:12e3,2:8e3}},ge.samplesInFrameTable=[[0,384,1152,1152],[0,384,1152,576]];const ke=4,ye=(e,t)=>new ge(e,t);class we extends re{constructor(){super(...arguments),this.frameCount=0,this.syncFrameCount=-1,this.countSkipFrameData=0,this.totalDataLength=0,this.bitrates=[],this.offset=0,this.frame_size=0,this.crc=null,this.calculateEofDuration=!1,this.samplesPerFrame=null,this.buf_frame_header=new Uint8Array(4),this.mpegOffset=null,this.syncPeek={buf:new Uint8Array(1024),len:0}}async postId3v2Parse(){this.metadata.setFormat("lossless",!1);try{let e=!1;for(;!e;)await this.sync(),e=await this.parseCommonMpegHeader()}catch(e){if(!(e instanceof r))throw e;if(me("End-of-stream"),this.calculateEofDuration&&null!==this.samplesPerFrame){const e=this.frameCount*this.samplesPerFrame;if(this.metadata.setFormat("numberOfSamples",e),this.metadata.format.sampleRate){const t=e/this.metadata.format.sampleRate;me(`Calculate duration at EOF: ${t} sec.`,t),this.metadata.setFormat("duration",t)}}}}finalize(){const e=this.metadata.format,t=!!this.metadata.native.ID3v1;if(null!==this.mpegOffset){if(e.duration&&this.tokenizer.fileInfo.size){const a=this.tokenizer.fileInfo.size-this.mpegOffset-(t?128:0);e.codecProfile&&"V"===e.codecProfile[0]&&this.metadata.setFormat("bitrate",8*a/e.duration)}if(this.tokenizer.fileInfo.size&&"CBR"===e.codecProfile){const a=this.tokenizer.fileInfo.size-this.mpegOffset-(t?128:0);if(null!==this.frame_size&&null!==this.samplesPerFrame){const t=Math.round(a/this.frame_size)*this.samplesPerFrame;if(this.metadata.setFormat("numberOfSamples",t),e.sampleRate&&!e.duration){const a=t/e.sampleRate;me("Calculate CBR duration based on file size: %s",a),this.metadata.setFormat("duration",a)}}}}}async sync(){let e=!1;for(;;){let t=0;if(this.syncPeek.len=await this.tokenizer.peekBuffer(this.syncPeek.buf,{length:1024,mayBeLess:!0}),this.syncPeek.len<=163)throw new r;for(;;){if(e&&!(224&~this.syncPeek.buf[t]))return this.buf_frame_header[0]=ge.SyncByte1,this.buf_frame_header[1]=this.syncPeek.buf[t],await this.tokenizer.ignore(t),me(`Sync at offset=${this.tokenizer.position-1}, frameCount=${this.frameCount}`),this.syncFrameCount===this.frameCount&&(me(`Re-synced MPEG stream, frameCount=${this.frameCount}`),this.frameCount=0,this.frame_size=0),void(this.syncFrameCount=this.frameCount);if(e=!1,t=this.syncPeek.buf.indexOf(ge.SyncByte1,t),-1===t){if(this.syncPeek.len<this.syncPeek.buf.length)throw new r;await this.tokenizer.ignore(this.syncPeek.len);break}++t,e=!0}}}async parseCommonMpegHeader(){let e;0===this.frameCount&&(this.mpegOffset=this.tokenizer.position-1),await this.tokenizer.peekBuffer(this.buf_frame_header.subarray(1),{length:3});try{e=ye(this.buf_frame_header,0)}catch(e){if(await this.tokenizer.ignore(1),e instanceof Error)return this.metadata.addWarning(`Parse error: ${e.message}`),!1;throw e}return await this.tokenizer.ignore(3),this.metadata.setFormat("container",e.container),this.metadata.setFormat("codec",e.codec),this.metadata.setFormat("lossless",!1),this.metadata.setFormat("sampleRate",e.samplingRate),this.frameCount++,null!==e.version&&e.version>=2&&0===e.layer?this.parseAdts(e):this.parseAudioFrameHeader(e)}async parseAudioFrameHeader(e){this.metadata.setFormat("numberOfChannels","mono"===e.channelMode?1:2),this.metadata.setFormat("bitrate",e.bitrate),this.frameCount<2e5&&me("offset=%s MP%s bitrate=%s sample-rate=%s",this.tokenizer.position-4,e.layer,e.bitrate,e.samplingRate);const t=e.calcSlotSize();if(null===t)throw new ue("invalid slot_size");const a=e.calcSamplesPerFrame();me(`samples_per_frame=${a}`);const i=a/8;if(null!==e.bitrate&&null!=e.samplingRate){const a=i*e.bitrate/e.samplingRate+(e.padding?t:0);this.frame_size=Math.floor(a)}if(this.audioFrameHeader=e,null!==e.bitrate&&this.bitrates.push(e.bitrate),1===this.frameCount)return this.offset=ke,await this.skipSideInformation(),!1;if(3===this.frameCount){if(this.areAllSame(this.bitrates)){if(this.samplesPerFrame=a,this.metadata.setFormat("codecProfile","CBR"),this.tokenizer.fileInfo.size)return!0}else if(this.metadata.format.duration)return!0;if(!this.options.duration)return!0}return this.options.duration&&4===this.frameCount&&(this.samplesPerFrame=a,this.calculateEofDuration=!0),this.offset=4,e.isProtectedByCRC?(await this.parseCrc(),!1):(await this.skipSideInformation(),!1)}async parseAdts(e){const t=new Uint8Array(3);if(await this.tokenizer.readBuffer(t),e.frameLength+=g(t,0,0,11),this.totalDataLength+=e.frameLength,this.samplesPerFrame=1024,null!==e.samplingRate){const t=e.samplingRate/this.samplesPerFrame,a=8*(0===this.frameCount?0:this.totalDataLength/this.frameCount)*t+.5;this.metadata.setFormat("bitrate",a),me(`frame-count=${this.frameCount}, size=${e.frameLength} bytes, bit-rate=${a}`)}if(await this.tokenizer.ignore(e.frameLength>7?e.frameLength-7:1),3===this.frameCount){if(this.metadata.setFormat("codecProfile",e.codecProfile),e.mp4ChannelConfig&&this.metadata.setFormat("numberOfChannels",e.mp4ChannelConfig.length),!this.options.duration)return!0;this.calculateEofDuration=!0}return!1}async parseCrc(){return this.crc=await this.tokenizer.readNumber(e.INT16_BE),this.offset+=2,this.skipSideInformation()}async skipSideInformation(){if(this.audioFrameHeader){const t=this.audioFrameHeader.calculateSideInfoLength();if(null!==t)return await this.tokenizer.readToken(new e.Uint8ArrayType(t)),this.offset+=t,void await this.readXtraInfoHeader()}}async readXtraInfoHeader(){const e=await this.tokenizer.readToken(le);switch(this.offset+=le.len,e){case"Info":return this.metadata.setFormat("codecProfile","CBR"),this.readXingInfoHeader();case"Xing":{const e=await this.readXingInfoHeader();if(null!==e.vbrScale){const a=(t=e.vbrScale,`V${Math.floor((100-t)/10)}`);this.metadata.setFormat("codecProfile",a)}return null}case"Xtra":break;case"LAME":{const e=await this.tokenizer.readToken(de);if(null!==this.frame_size&&this.frame_size>=this.offset+de.len)return this.offset+=de.len,this.metadata.setFormat("tool",`LAME ${e}`),await this.skipFrameData(this.frame_size-this.offset),null;this.metadata.addWarning("Corrupt LAME header");break}}var t;const a=this.frame_size-this.offset;return a<0?this.metadata.addWarning(`Frame ${this.frameCount}corrupt: negative frameDataLeft`):await this.skipFrameData(a),null}async readXingInfoHeader(){const t=this.tokenizer.position,a=await async function(t){const a=await t.readToken(he),i={numFrames:null,streamSize:null,vbrScale:null};if(a.frames&&(i.numFrames=await t.readToken(e.UINT32_BE)),a.bytes&&(i.streamSize=await t.readToken(e.UINT32_BE)),a.toc&&(i.toc=new Uint8Array(100),await t.readBuffer(i.toc)),a.vbrScale&&(i.vbrScale=await t.readToken(e.UINT32_BE)),"LAME"===await t.peekToken(new e.StringType(4,"ascii"))){await t.ignore(4),i.lame={version:await t.readToken(new e.StringType(5,"ascii"))};const a=i.lame.version.match(/\d+.\d+/g);if(null!==a){const e=a[0].split(".").map((e=>Number.parseInt(e,10)));e[0]>=3&&e[1]>=90&&(i.lame.extended=await t.readToken(ce))}}return i}(this.tokenizer);var i;if(this.offset+=this.tokenizer.position-t,a.lame&&(this.metadata.setFormat("tool",`LAME ${i=a.lame.version,(i=i.replace(/^\x00+/g,"")).replace(/\x00+$/g,"")}`),a.lame.extended&&(this.metadata.setFormat("trackPeakLevel",a.lame.extended.track_peak),a.lame.extended.track_gain&&this.metadata.setFormat("trackGain",a.lame.extended.track_gain.adjustment),a.lame.extended.album_gain&&this.metadata.setFormat("albumGain",a.lame.extended.album_gain.adjustment),this.metadata.setFormat("duration",a.lame.extended.music_length/1e3))),a.streamSize&&this.audioFrameHeader&&null!==a.numFrames){const e=this.audioFrameHeader.calcDuration(a.numFrames);return this.metadata.setFormat("duration",e),me("Get duration from Xing header: %s",this.metadata.format.duration),a}const r=this.frame_size-this.offset;return await this.skipFrameData(r),a}async skipFrameData(e){if(e<0)throw new ue("frame-data-left cannot be negative");await this.tokenizer.ignore(e),this.countSkipFrameData+=e}areAllSame(e){const t=e[0];return e.every((e=>e===t))}}export{ue as MpegContentError,we as MpegParser};export default null;