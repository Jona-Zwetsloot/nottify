import*as e from"./token-types.js";import{StringType as t,UINT8 as a,Uint8ArrayType as s,UINT24_BE as r,UINT16_BE as i}from"./token-types.js";import n from"./debug.js";import*as o from"./strtok3.js";import{EndOfStreamError as c}from"./strtok3.js";import{uint8ArrayToString as l,stringToUint8Array as d}from"./uint8array-extras.js";const h=e=>class extends Error{constructor(t){super(t),this.name=e}};class g extends(h("UnexpectedFileContentError")){constructor(e,t){super(t),this.fileType=e}toString(){return`${this.name} (FileType: ${this.fileType}): ${this.message}`}}class p extends(h("FieldDecodingError")){}class u extends(h("InternalParserError")){}const m=e=>class extends g{constructor(t){super(e,t)}};function f(e,t,a){return!!(e[t]&1<<a)}function T(e,t,a,s){let r=t;if("utf-16le"===s){for(;0!==e[r]||0!==e[r+1];){if(r>=a)return a;r+=2}return r}for(;0!==e[r];){if(r>=a)return a;r++}return r}function k(e,a){if(255===e[0]&&254===e[1])return k(e.subarray(2),a);if("utf-16le"===a&&254===e[0]&&255===e[1]){if(1&e.length)throw new p("Expected even number of octets for 16-bit unicode string");return k(function(e){const t=e.length;if(1&t)throw new p("Buffer length must be even");for(let a=0;a<t;a+=2){const t=e[a];e[a]=e[a+1],e[a+1]=t}return e}(e),a)}return new t(e.length,a).get(e,0)}function y(e,t,a,s){const r=a%8;let i=e[t+~~(a/8)];i&=255>>r;const n=8-r,o=s-n;return o<0?i>>=8-r-s:o>0&&(i<<=o,i|=y(e,t,a+n,o)),i}var I,w,v;!function(e){e[e.Other=0]="Other",e[e["32x32 pixels 'file icon' (PNG only)"]=1]="32x32 pixels 'file icon' (PNG only)",e[e["Other file icon"]=2]="Other file icon",e[e["Cover (front)"]=3]="Cover (front)",e[e["Cover (back)"]=4]="Cover (back)",e[e["Leaflet page"]=5]="Leaflet page",e[e["Media (e.g. label side of CD)"]=6]="Media (e.g. label side of CD)",e[e["Lead artist/lead performer/soloist"]=7]="Lead artist/lead performer/soloist",e[e["Artist/performer"]=8]="Artist/performer",e[e.Conductor=9]="Conductor",e[e["Band/Orchestra"]=10]="Band/Orchestra",e[e.Composer=11]="Composer",e[e["Lyricist/text writer"]=12]="Lyricist/text writer",e[e["Recording Location"]=13]="Recording Location",e[e["During recording"]=14]="During recording",e[e["During performance"]=15]="During performance",e[e["Movie/video screen capture"]=16]="Movie/video screen capture",e[e["A bright coloured fish"]=17]="A bright coloured fish",e[e.Illustration=18]="Illustration",e[e["Band/artist logotype"]=19]="Band/artist logotype",e[e["Publisher/Studio logotype"]=20]="Publisher/Studio logotype"}(I||(I={})),function(e){e[e.other=0]="other",e[e.lyrics=1]="lyrics",e[e.text=2]="text",e[e.movement_part=3]="movement_part",e[e.events=4]="events",e[e.chord=5]="chord",e[e.trivia_pop=6]="trivia_pop"}(w||(w={})),function(e){e[e.notSynchronized0=0]="notSynchronized0",e[e.mpegFrameNumber=1]="mpegFrameNumber",e[e.milliseconds=2]="milliseconds"}(v||(v={}));const b={get:(e,t)=>127&e[t+3]|e[t+2]<<7|e[t+1]<<14|e[t]<<21,len:4},E={len:10,get:(t,a)=>({fileIdentifier:new e.StringType(3,"ascii").get(t,a),version:{major:e.INT8.get(t,a+3),revision:e.INT8.get(t,a+4)},flags:{unsynchronisation:f(t,a+5,7),isExtendedHeader:f(t,a+5,6),expIndicator:f(t,a+5,5),footer:f(t,a+5,4)},size:b.get(t,a+6)})},P={len:10,get:(t,a)=>({size:e.UINT32_BE.get(t,a),extendedFlags:e.UINT16_BE.get(t,a+4),sizeOfPadding:e.UINT32_BE.get(t,a+6),crcDataPresent:f(t,a+4,31)})},z=(e,t)=>{switch(e[t]){case 0:return{encoding:"latin1"};case 1:return{encoding:"utf-16le",bom:!0};case 2:return{encoding:"utf-16le",bom:!1};default:return{encoding:"utf8",bom:!1}}},A=4,C=(t,a)=>({encoding:z(t,a),language:new e.StringType(3,"latin1").get(t,a+1)}),D=6,N=(t,a)=>{const s=C(t,a);return{encoding:s.encoding,language:s.language,timeStampFormat:e.UINT8.get(t,a+4),contentType:e.UINT8.get(t,a+5)}};class U{static fromBase64(e){return U.fromBuffer(Uint8Array.from(atob(e),(e=>e.charCodeAt(0))))}static fromBuffer(e){return new U(e.length).get(e,0)}constructor(e){this.len=e}get(t,a){const s=I[e.UINT32_BE.get(t,a)];a+=4;const r=e.UINT32_BE.get(t,a);a+=4;const i=new e.StringType(r,"utf-8").get(t,a);a+=r;const n=e.UINT32_BE.get(t,a);a+=4;const o=new e.StringType(n,"utf-8").get(t,a);a+=n;const c=e.UINT32_BE.get(t,a);a+=4;const l=e.UINT32_BE.get(t,a);a+=4;const d=e.UINT32_BE.get(t,a);a+=4;const h=e.UINT32_BE.get(t,a);a+=4;const g=e.UINT32_BE.get(t,a);a+=4;return{type:s,format:i,description:o,width:c,height:l,colour_depth:d,indexed_color:h,data:Uint8Array.from(t.slice(a,a+g))}}}const S=7,B=(t,a)=>({packetType:e.UINT8.get(t,a),vorbis:new e.StringType(6,"ascii").get(t,a+1)}),F=(t,a)=>({version:e.UINT32_LE.get(t,a+0),channelMode:e.UINT8.get(t,a+4),sampleRate:e.UINT32_LE.get(t,a+5),bitrateMax:e.UINT32_LE.get(t,a+9),bitrateNominal:e.UINT32_LE.get(t,a+13),bitrateMin:e.UINT32_LE.get(t,a+17)});class x{constructor(e,t,a){this.metadata=e,this.tokenizer=t,this.options=a}}const L=/^[\x21-\x7eÂ©][\x20-\x7e\x00()]{3}/,_={len:4,get:(e,t)=>{const a=l(e.slice(t,t+_.len),"latin1");if(!a.match(L))throw new p(`FourCC contains invalid characters: ${function(e){const t=[];for(let a=0,s=e.length;a<s;a++){const s=Number(e.charCodeAt(a)).toString(16);t.push(1===s.length?`0${s}`:s)}return t.join(" ")}(a)} "${a}"`);return a},put:(e,t,a)=>{const s=d(a);if(4!==s.length)throw new u("Invalid length");return e.set(s,t),t+4}};var R;!function(e){e[e.text_utf8=0]="text_utf8",e[e.binary=1]="binary",e[e.external_info=2]="external_info",e[e.reserved=3]="reserved"}(R||(R={}));const H={len:52,get:(t,a)=>({ID:_.get(t,a),version:e.UINT32_LE.get(t,a+4)/1e3,descriptorBytes:e.UINT32_LE.get(t,a+8),headerBytes:e.UINT32_LE.get(t,a+12),seekTableBytes:e.UINT32_LE.get(t,a+16),headerDataBytes:e.UINT32_LE.get(t,a+20),apeFrameDataBytes:e.UINT32_LE.get(t,a+24),apeFrameDataBytesHigh:e.UINT32_LE.get(t,a+28),terminatingDataBytes:e.UINT32_LE.get(t,a+32),fileMD5:new e.Uint8ArrayType(16).get(t,a+36)})},M={len:24,get:(t,a)=>({compressionLevel:e.UINT16_LE.get(t,a),formatFlags:e.UINT16_LE.get(t,a+2),blocksPerFrame:e.UINT32_LE.get(t,a+4),finalFrameBlocks:e.UINT32_LE.get(t,a+8),totalFrames:e.UINT32_LE.get(t,a+12),bitsPerSample:e.UINT16_LE.get(t,a+16),channel:e.UINT16_LE.get(t,a+18),sampleRate:e.UINT32_LE.get(t,a+20)})},O={len:32,get:(t,a)=>({ID:new e.StringType(8,"ascii").get(t,a),version:e.UINT32_LE.get(t,a+8),size:e.UINT32_LE.get(t,a+12),fields:e.UINT32_LE.get(t,a+16),flags:G(e.UINT32_LE.get(t,a+20))})},$={len:8,get:(t,a)=>({size:e.UINT32_LE.get(t,a),flags:G(e.UINT32_LE.get(t,a+4))})};function G(e){return{containsHeader:W(e,31),containsFooter:W(e,30),isHeader:W(e,29),readOnly:W(e,0),dataType:(6&e)>>1}}function W(e,t){return!!(e&1<<t)}const j=n("music-metadata:parser:APEv2"),V="APEv2",X="APETAGEX";class K extends(m("APEv2")){}class J extends x{constructor(){super(...arguments),this.ape={}}static tryParseApeHeader(e,t,a){return new J(e,t,a).tryParseApeHeader()}static calculateDuration(e){let t=e.totalFrames>1?e.blocksPerFrame*(e.totalFrames-1):0;return t+=e.finalFrameBlocks,t/e.sampleRate}static async findApeFooterOffset(e,t){const a=new Uint8Array(O.len),s=e.position;await e.readBuffer(a,{position:t-O.len}),e.setPosition(s);const r=O.get(a,0);if("APETAGEX"===r.ID)return r.flags.isHeader?j("APE Header found at offset="+(t-O.len)):(j("APE Footer found at offset="+(t-O.len)),t-=r.size),{footer:r,offset:t}}static parseTagFooter(e,t,a){const s=O.get(t,t.length-O.len);if(s.ID!==X)throw new K("Unexpected APEv2 Footer ID preamble value");o.fromBuffer(t);return new J(e,o.fromBuffer(t),a).parseTags(s)}async tryParseApeHeader(){if(this.tokenizer.fileInfo.size&&this.tokenizer.fileInfo.size-this.tokenizer.position<O.len)return void j("No APEv2 header found, end-of-file reached");const e=await this.tokenizer.peekToken(O);if(e.ID===X)return await this.tokenizer.ignore(O.len),this.parseTags(e);if(j(`APEv2 header not found at offset=${this.tokenizer.position}`),this.tokenizer.fileInfo.size){const e=this.tokenizer.fileInfo.size-this.tokenizer.position,t=new Uint8Array(e);return await this.tokenizer.readBuffer(t),J.parseTagFooter(this.metadata,t,this.options)}}async parse(){const e=await this.tokenizer.readToken(H);if("MAC "!==e.ID)throw new K("Unexpected descriptor ID");this.ape.descriptor=e;const t=e.descriptorBytes-H.len,a=await(t>0?this.parseDescriptorExpansion(t):this.parseHeader());return await this.tokenizer.ignore(a.forwardBytes),this.tryParseApeHeader()}async parseTags(e){const a=new Uint8Array(256);let s=e.size-O.len;j(`Parse APE tags at offset=${this.tokenizer.position}, size=${s}`);for(let r=0;r<e.fields;r++){if(s<$.len){this.metadata.addWarning(`APEv2 Tag-header: ${e.fields-r} items remaining, but no more tag data to read.`);break}const i=await this.tokenizer.readToken($);s-=$.len+i.size,await this.tokenizer.peekBuffer(a,{length:Math.min(a.length,s)});let n=T(a,0,a.length);const o=await this.tokenizer.readToken(new t(n,"ascii"));switch(await this.tokenizer.ignore(1),s-=o.length+1,i.flags.dataType){case R.text_utf8:{const e=(await this.tokenizer.readToken(new t(i.size,"utf8"))).split(/\x00/g);await Promise.all(e.map((e=>this.metadata.addTag(V,o,e))));break}case R.binary:if(this.options.skipCovers)await this.tokenizer.ignore(i.size);else{const e=new Uint8Array(i.size);await this.tokenizer.readBuffer(e),n=T(e,0,e.length);const t=l(e.slice(0,n)),a=e.slice(n+1);await this.metadata.addTag(V,o,{description:t,data:a})}break;case R.external_info:j(`Ignore external info ${o}`),await this.tokenizer.ignore(i.size);break;case R.reserved:j(`Ignore external info ${o}`),this.metadata.addWarning(`APEv2 header declares a reserved datatype for "${o}"`),await this.tokenizer.ignore(i.size)}}}async parseDescriptorExpansion(e){return await this.tokenizer.ignore(e),this.parseHeader()}async parseHeader(){const e=await this.tokenizer.readToken(M);if(this.metadata.setFormat("lossless",!0),this.metadata.setFormat("container","Monkey's Audio"),this.metadata.setFormat("bitsPerSample",e.bitsPerSample),this.metadata.setFormat("sampleRate",e.sampleRate),this.metadata.setFormat("numberOfChannels",e.channel),this.metadata.setFormat("duration",J.calculateDuration(e)),!this.ape.descriptor)throw new K("Missing APE descriptor");return{forwardBytes:this.ape.descriptor.seekTableBytes+this.ape.descriptor.headerDataBytes+this.ape.descriptor.apeFrameDataBytes+this.ape.descriptor.terminatingDataBytes}}}const Y=n("music-metadata:parser:ID3v1"),Z=["Blues","Classic Rock","Country","Dance","Disco","Funk","Grunge","Hip-Hop","Jazz","Metal","New Age","Oldies","Other","Pop","R&B","Rap","Reggae","Rock","Techno","Industrial","Alternative","Ska","Death Metal","Pranks","Soundtrack","Euro-Techno","Ambient","Trip-Hop","Vocal","Jazz+Funk","Fusion","Trance","Classical","Instrumental","Acid","House","Game","Sound Clip","Gospel","Noise","Alt. Rock","Bass","Soul","Punk","Space","Meditative","Instrumental Pop","Instrumental Rock","Ethnic","Gothic","Darkwave","Techno-Industrial","Electronic","Pop-Folk","Eurodance","Dream","Southern Rock","Comedy","Cult","Gangsta Rap","Top 40","Christian Rap","Pop/Funk","Jungle","Native American","Cabaret","New Wave","Psychedelic","Rave","Showtunes","Trailer","Lo-Fi","Tribal","Acid Punk","Acid Jazz","Polka","Retro","Musical","Rock & Roll","Hard Rock","Folk","Folk/Rock","National Folk","Swing","Fast-Fusion","Bebob","Latin","Revival","Celtic","Bluegrass","Avantgarde","Gothic Rock","Progressive Rock","Psychedelic Rock","Symphonic Rock","Slow Rock","Big Band","Chorus","Easy Listening","Acoustic","Humour","Speech","Chanson","Opera","Chamber Music","Sonata","Symphony","Booty Bass","Primus","Porn Groove","Satire","Slow Jam","Club","Tango","Samba","Folklore","Ballad","Power Ballad","Rhythmic Soul","Freestyle","Duet","Punk Rock","Drum Solo","A Cappella","Euro-House","Dance Hall","Goa","Drum & Bass","Club-House","Hardcore","Terror","Indie","BritPop","Negerpunk","Polsk Punk","Beat","Christian Gangsta Rap","Heavy Metal","Black Metal","Crossover","Contemporary Christian","Christian Rock","Merengue","Salsa","Thrash Metal","Anime","JPop","Synthpop","Abstract","Art Rock","Baroque","Bhangra","Big Beat","Breakbeat","Chillout","Downtempo","Dub","EBM","Eclectic","Electro","Electroclash","Emo","Experimental","Garage","Global","IDM","Illbient","Industro-Goth","Jam Band","Krautrock","Leftfield","Lounge","Math Rock","New Romantic","Nu-Breakz","Post-Punk","Post-Rock","Psytrance","Shoegaze","Space Rock","Trop Rock","World Music","Neoclassical","Audiobook","Audio Theatre","Neue Deutsche Welle","Podcast","Indie Rock","G-Funk","Dubstep","Garage Rock","Psybient"],q={len:128,get:(e,t)=>{const s=new Q(3).get(e,t);return"TAG"===s?{header:s,title:new Q(30).get(e,t+3),artist:new Q(30).get(e,t+33),album:new Q(30).get(e,t+63),year:new Q(4).get(e,t+93),comment:new Q(28).get(e,t+97),zeroByte:a.get(e,t+127),track:a.get(e,t+126),genre:a.get(e,t+127)}:null}};class Q{constructor(e){this.len=e,this.stringType=new t(e,"latin1")}get(e,t){let a=this.stringType.get(e,t);return a=function(e){const t=e.indexOf("\0");return-1===t?e:e.substr(0,t)}(a),a=a.trim(),a.length>0?a:void 0}}class ee extends x{constructor(e,t,a){super(e,t,a),this.apeHeader=a.apeHeader}static getGenre(e){if(e<Z.length)return Z[e]}async parse(){if(!this.tokenizer.fileInfo.size)return void Y("Skip checking for ID3v1 because the file-size is unknown");if(this.apeHeader){this.tokenizer.ignore(this.apeHeader.offset-this.tokenizer.position);const e=new J(this.metadata,this.tokenizer,this.options);await e.parseTags(this.apeHeader.footer)}const e=this.tokenizer.fileInfo.size-q.len;if(this.tokenizer.position>e)return void Y("Already consumed the last 128 bytes");const t=await this.tokenizer.readToken(q,e);if(t){Y("ID3v1 header found at: pos=%s",this.tokenizer.fileInfo.size-q.len);const e=["title","artist","album","comment","track","year"];for(const a of e)t[a]&&""!==t[a]&&await this.addTag(a,t[a]);const a=ee.getGenre(t.genre);a&&await this.addTag("genre",a)}else Y("ID3v1 header not found at: pos=%s",this.tokenizer.fileInfo.size-q.len)}async addTag(e,t){await this.metadata.addTag("ID3v1",e,t)}}const te=n("music-metadata:id3v2:frame-parser"),ae="latin1";function se(e){return"RX"===e?"Remix":"CR"===e?"Cover":e.match(/^\d*$/)?Z[Number.parseInt(e)]:void 0}class re{constructor(e,t){this.major=e,this.warningCollector=t}readData(t,a,s){if(0===t.length)return void this.warningCollector.addWarning(`id3v2.${this.major} header has empty tag type=${a}`);const{encoding:r,bom:i}=z(t,0),n=t.length;let o=0,c=[];const l=re.getNullTerminatorLength(r);let d;switch(te(`Parsing tag type=${a}, encoding=${r}, bom=${i}`),"TXXX"!==a&&"T"===a[0]?"T*":a){case"T*":case"GRP1":case"IPLS":case"MVIN":case"MVNM":case"PCS":case"PCST":{let e;try{e=k(t.slice(1),r).replace(/\x00+$/,"")}catch(e){if(e instanceof Error){this.warningCollector.addWarning(`id3v2.${this.major} type=${a} header has invalid string value: ${e.message}`);break}throw e}switch(a){case"TMCL":case"TIPL":case"IPLS":c=re.functionList(this.splitValue(a,e));break;case"TRK":case"TRCK":case"TPOS":c=e;break;case"TCOM":case"TEXT":case"TOLY":case"TOPE":case"TPE1":case"TSRC":c=this.splitValue(a,e);break;case"TCO":case"TCON":c=this.splitValue(a,e).map((e=>function(e){const t=[];let a,s="";for(const r of e)if("string"==typeof a)if("("===r&&""===a)s+="(",a=void 0;else if(")"===r){""!==s&&(t.push(s),s="");const e=se(a);e&&t.push(e),a=void 0}else a+=r;else"("===r?a="":s+=r;return s&&(0===t.length&&s.match(/^\d*$/)&&(s=se(s)),s&&t.push(s)),t}(e))).reduce(((e,t)=>e.concat(t)),[]);break;case"PCS":case"PCST":c=this.major>=4?this.splitValue(a,e):[e],c=Array.isArray(c)&&""===c[0]?1:0;break;default:c=this.major>=4?this.splitValue(a,e):[e]}break}case"TXXX":{const e=re.readIdentifierAndData(t,o+1,n,r);c={description:e.id,text:this.splitValue(a,k(e.data,r).replace(/\x00+$/,""))};break}case"PIC":case"APIC":if(s){const e={};switch(o+=1,this.major){case 2:e.format=k(t.slice(o,o+3),"latin1"),o+=3;break;case 3:case 4:d=T(t,o,n,ae),e.format=k(t.slice(o,d),ae),o=d+1;break;default:throw function(e){throw new ie(`Unexpected majorVer: ${e}`)}(this.major)}e.format=re.fixPictureMimeType(e.format),e.type=I[t[o]],o+=1,d=T(t,o,n,r),e.description=k(t.slice(o,d),r),o=d+l,e.data=t.slice(o,n),c=e}break;case"CNT":case"PCNT":c=e.UINT32_BE.get(t,0);break;case"SYLT":{const a=N(t,0);o+=D;const s={descriptor:"",language:a.language,contentType:a.contentType,timeStampFormat:a.timeStampFormat,syncText:[]};let r=!1;for(;o<n;){const i=re.readNullTerminatedString(t.subarray(o),a.encoding);if(o+=i.len,r){const a=e.UINT32_BE.get(t,o);o+=e.UINT32_BE.len,s.syncText.push({text:i.text,timestamp:a})}else s.descriptor=i.text,r=!0}c=s;break}case"ULT":case"USLT":case"COM":case"COMM":{const e=C(t,o);o+=A;const a=re.readNullTerminatedString(t.subarray(o),e.encoding);o+=a.len;const s=re.readNullTerminatedString(t.subarray(o),e.encoding);c={language:e.language,descriptor:a.text,text:s.text};break}case"UFID":{const e=re.readIdentifierAndData(t,o,n,ae);c={owner_identifier:e.id,identifier:e.data};break}case"PRIV":{const e=re.readIdentifierAndData(t,o,n,ae);c={owner_identifier:e.id,data:e.data};break}case"POPM":{d=T(t,o,n,ae);const a=k(t.slice(o,d),ae);o=d+1;const s=n-o;c={email:a,rating:e.UINT8.get(t,o),counter:s>=5?e.UINT32_BE.get(t,o+1):void 0};break}case"GEOB":{d=T(t,o+1,n,r);const e=k(t.slice(o+1,d),ae);o=d+1,d=T(t,o,n,r);const a=k(t.slice(o,d),ae);o=d+1,d=T(t,o,n,r);const s=k(t.slice(o,d),ae);o=d+1;c={type:e,filename:a,description:s,data:t.slice(o,n)};break}case"WCOM":case"WCOP":case"WOAF":case"WOAR":case"WOAS":case"WORS":case"WPAY":case"WPUB":d=T(t,o+1,n,r),c=k(t.slice(o,d),ae);break;case"WXXX":{d=T(t,o+1,n,r);const e=k(t.slice(o+1,d),r);o=d+("utf-16le"===r?2:1),c={description:e,url:k(t.slice(o,n),ae)};break}case"WFD":case"WFED":c=k(t.slice(o+1,T(t,o+1,n,r)),r);break;case"MCDI":c=t.slice(0,n);break;default:te(`Warning: unsupported id3v2-tag-type: ${a}`)}return c}static readNullTerminatedString(e,t){let a=t.bom?2:0;const s=T(e,a,e.length,t.encoding),r=e.slice(a,s);return a="utf-16le"===t.encoding?s+2:s+1,{text:k(r,t.encoding),len:a}}static fixPictureMimeType(e){switch(e=e.toLocaleLowerCase()){case"jpg":return"image/jpeg";case"png":return"image/png"}return e}static functionList(e){const t={};for(let a=0;a+1<e.length;a+=2){const s=e[a+1].split(",");t[e[a]]=t[e[a]]?t[e[a]].concat(s):s}return t}splitValue(e,t){let a;return this.major<4?(a=t.split(/\x00/g),a.length>1?this.warningCollector.addWarning(`ID3v2.${this.major} ${e} uses non standard null-separator.`):a=t.split(/\//g)):a=t.split(/\x00/g),re.trimArray(a)}static trimArray(e){return e.map((e=>e.replace(/\x00+$/,"").trim()))}static readIdentifierAndData(e,t,a,s){const r=T(e,t,a,s),i=k(e.slice(t,r),s);return t=r+re.getNullTerminatorLength(s),{id:i,data:e.slice(t,a)}}static getNullTerminatorLength(e){return"utf-16le"===e?2:1}}class ie extends(m("id3v2")){}const ne=new TextDecoder("ascii");class oe{constructor(){this.tokenizer=void 0,this.id3Header=void 0,this.metadata=void 0,this.headerType=void 0,this.options=void 0}static removeUnsyncBytes(e){let t=0,a=0;for(;t<e.length-1;)t!==a&&(e[a]=e[t]),t+=255===e[t]&&0===e[t+1]?2:1,a++;return t<e.length&&(e[a++]=e[t]),e.slice(0,a)}static getFrameHeaderLength(e){switch(e){case 2:return 6;case 3:case 4:return 10;default:throw ce(e)}}static readFrameFlags(e){return{status:{tag_alter_preservation:f(e,0,6),file_alter_preservation:f(e,0,5),read_only:f(e,0,4)},format:{grouping_identity:f(e,1,7),compression:f(e,1,3),encryption:f(e,1,2),unsynchronisation:f(e,1,1),data_length_indicator:f(e,1,0)}}}static readFrameData(e,t,a,s,r){const i=new re(a,r);switch(a){case 2:return i.readData(e,t.id,s);case 3:case 4:return t.flags?.format.unsynchronisation&&(e=oe.removeUnsyncBytes(e)),t.flags?.format.data_length_indicator&&(e=e.slice(4,e.length)),i.readData(e,t.id,s);default:throw ce(a)}}static makeDescriptionTagName(e,t){return e+(t?`:${t}`:"")}async parse(e,t,a){this.tokenizer=t,this.metadata=e,this.options=a;const s=await this.tokenizer.readToken(E);if("ID3"!==s.fileIdentifier)throw new ie("expected ID3-header file-identifier 'ID3' was not found");return this.id3Header=s,this.headerType=`ID3v2.${s.version.major}`,s.flags.isExtendedHeader?this.parseExtendedHeader():this.parseId3Data(s.size)}async parseExtendedHeader(){const e=await this.tokenizer.readToken(P),t=e.size-P.len;return t>0?this.parseExtendedHeaderData(t,e.size):this.parseId3Data(this.id3Header.size-e.size)}async parseExtendedHeaderData(e,t){return await this.tokenizer.ignore(e),this.parseId3Data(this.id3Header.size-t)}async parseId3Data(t){const a=await this.tokenizer.readToken(new e.Uint8ArrayType(t));for(const e of this.parseMetadata(a))if("TXXX"===e.id)e.value&&await this.handleTag(e,e.value.text,(()=>e.value.description));else await(Array.isArray(e.value)?Promise.all(e.value.map((t=>this.addTag(e.id,t)))):this.addTag(e.id,e.value))}async handleTag(e,t,a,s=e=>e){await Promise.all(t.map((t=>this.addTag(oe.makeDescriptionTagName(e.id,a(t)),s(t)))))}async addTag(e,t){await this.metadata.addTag(this.headerType,e,t)}parseMetadata(e){let t=0;const a=[];for(;t!==e.length;){const s=oe.getFrameHeaderLength(this.id3Header.version.major);if(t+s>e.length){this.metadata.addWarning("Illegal ID3v2 tag length");break}const r=e.slice(t,t+s);t+=s;const i=this.readFrameHeader(r,this.id3Header.version.major),n=e.slice(t,t+i.length);t+=i.length;const o=oe.readFrameData(n,i,this.id3Header.version.major,!this.options.skipCovers,this.metadata);o&&a.push({id:i.id,value:o})}return a}readFrameHeader(t,a){let s;switch(a){case 2:s={id:ne.decode(t.slice(0,3)),length:e.UINT24_BE.get(t,3)},s.id.match(/[A-Z0-9]{3}/g)||this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${s.id}`);break;case 3:case 4:s={id:ne.decode(t.slice(0,4)),length:(4===a?b:e.UINT32_BE).get(t,4),flags:oe.readFrameFlags(t.slice(8,10))},s.id.match(/[A-Z0-9]{4}/g)||this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${s.id}`);break;default:throw ce(a)}return s}}function ce(e){throw new ie(`Unexpected majorVer: ${e}`)}const le=n("music-metadata:parser:ID3");class de extends x{constructor(){super(...arguments),this.id3parser=new oe}static async startsWithID3v2Header(e){return"ID3"===(await e.peekToken(E)).fileIdentifier}async parse(){try{await this.parseID3v2()}catch(e){if(!(e instanceof c))throw e;le("End-of-stream")}}finalize(){}async parseID3v2(){if(await this.tryReadId3v2Headers(),le("End of ID3v2 header, go to MPEG-parser: pos=%s",this.tokenizer.position),await this.postId3v2Parse(),this.options.skipPostHeaders&&this.metadata.hasAny())this.finalize();else{const e=new ee(this.metadata,this.tokenizer,this.options);await e.parse(),this.finalize()}}async tryReadId3v2Headers(){if("ID3"===(await this.tokenizer.peekToken(E)).fileIdentifier)return le("Found ID3v2 header, pos=%s",this.tokenizer.position),await this.id3parser.parse(this.metadata,this.tokenizer,this.options),this.tryReadId3v2Headers()}}class he{constructor(e,t){this.data=e,this.offset=t}readInt32(){const t=e.UINT32_LE.get(this.data,this.offset);return this.offset+=4,t}readStringUtf8(){const e=this.readInt32(),t=new TextDecoder("utf-8").decode(this.data.subarray(this.offset,this.offset+e));return this.offset+=e,t}parseUserComment(){const e=this.offset,t=this.readStringUtf8(),a=t.indexOf("=");return{key:t.slice(0,a).toUpperCase(),value:t.slice(a+1),len:this.offset-e}}}const ge=n("music-metadata:parser:ogg:vorbis1");class pe extends(m("Vorbis")){}class ue{constructor(e,t){this.metadata=e,this.options=t,this.pageSegments=[]}async parsePage(e,t){if(e.headerType.firstPage)this.parseFirstPage(e,t);else{if(e.headerType.continued){if(0===this.pageSegments.length)throw new pe("Cannot continue on previous page");this.pageSegments.push(t)}if(e.headerType.lastPage||!e.headerType.continued){if(this.pageSegments.length>0){const e=ue.mergeUint8Arrays(this.pageSegments);await this.parseFullPage(e)}this.pageSegments=e.headerType.lastPage?[]:[t]}}e.headerType.lastPage&&this.calculateDuration(e)}static mergeUint8Arrays(e){const t=e.reduce(((e,t)=>e+t.length),0),a=new Uint8Array(t);return e.forEach(((e,t,s)=>{const r=s.slice(0,t).reduce(((e,t)=>e+t.length),0);a.set(e,r)})),a}async flush(){await this.parseFullPage(ue.mergeUint8Arrays(this.pageSegments))}async parseUserComment(e,t){const a=new he(e,t).parseUserComment();return await this.addTag(a.key,a.value),a.len}async addTag(e,t){if("METADATA_BLOCK_PICTURE"===e&&"string"==typeof t){if(this.options.skipCovers)return void ge("Ignore picture");t=U.fromBase64(t),ge(`Push picture: id=${e}, format=${t.format}`)}else ge(`Push tag: id=${e}, value=${t}`);await this.metadata.addTag("vorbis",e,t)}calculateDuration(e){this.metadata.format.sampleRate&&e.absoluteGranulePosition>=0&&(this.metadata.setFormat("numberOfSamples",e.absoluteGranulePosition),this.metadata.setFormat("duration",e.absoluteGranulePosition/this.metadata.format.sampleRate))}parseFirstPage(e,t){this.metadata.setFormat("codec","Vorbis I"),ge("Parse first page");const a=B(t,0);if("vorbis"!==a.vorbis)throw new pe("Metadata does not look like Vorbis");if(1!==a.packetType)throw new pe("First Ogg page should be type 1: the identification header");{const e=F(t,S);this.metadata.setFormat("sampleRate",e.sampleRate),this.metadata.setFormat("bitrate",e.bitrateNominal),this.metadata.setFormat("numberOfChannels",e.channelMode),ge("sample-rate=%s[hz], bitrate=%s[b/s], channel-mode=%s",e.sampleRate,e.bitrateNominal,e.channelMode)}}async parseFullPage(e){const t=B(e,0);if(ge("Parse full page: type=%s, byteLength=%s",t.packetType,e.byteLength),3===t.packetType)return this.parseUserCommentList(e,S)}async parseUserCommentList(t,a){const s=e.UINT32_LE.get(t,a);a+=4,a+=s;let r=e.UINT32_LE.get(t,a);for(a+=4;r-- >0;)a+=await this.parseUserComment(t,a)}}const me=n("music-metadata:parser:FLAC");class fe extends(m("FLAC")){}var Te;!function(e){e[e.STREAMINFO=0]="STREAMINFO",e[e.PADDING=1]="PADDING",e[e.APPLICATION=2]="APPLICATION",e[e.SEEKTABLE=3]="SEEKTABLE",e[e.VORBIS_COMMENT=4]="VORBIS_COMMENT",e[e.CUESHEET=5]="CUESHEET",e[e.PICTURE=6]="PICTURE"}(Te||(Te={}));class ke extends de{constructor(){super(...arguments),this.vorbisParser=new ue(this.metadata,this.options),this.padding=0}async postId3v2Parse(){if("fLaC"!==(await this.tokenizer.readToken(_)).toString())throw new fe("Invalid FLAC preamble");let e;do{e=await this.tokenizer.readToken(ye),await this.parseDataBlock(e)}while(!e.lastBlock);if(this.tokenizer.fileInfo.size&&this.metadata.format.duration){const e=this.tokenizer.fileInfo.size-this.tokenizer.position;this.metadata.setFormat("bitrate",8*e/this.metadata.format.duration)}}async parseDataBlock(e){switch(me(`blockHeader type=${e.type}, length=${e.length}`),e.type){case Te.STREAMINFO:return this.parseBlockStreamInfo(e.length);case Te.PADDING:this.padding+=e.length;break;case Te.APPLICATION:case Te.SEEKTABLE:break;case Te.VORBIS_COMMENT:return this.parseComment(e.length);case Te.CUESHEET:break;case Te.PICTURE:return void await this.parsePicture(e.length);default:this.metadata.addWarning(`Unknown block type: ${e.type}`)}return this.tokenizer.ignore(e.length).then()}async parseBlockStreamInfo(e){if(e!==Ie.len)throw new fe("Unexpected block-stream-info length");const t=await this.tokenizer.readToken(Ie);this.metadata.setFormat("container","FLAC"),this.metadata.setFormat("codec","FLAC"),this.metadata.setFormat("lossless",!0),this.metadata.setFormat("numberOfChannels",t.channels),this.metadata.setFormat("bitsPerSample",t.bitsPerSample),this.metadata.setFormat("sampleRate",t.sampleRate),t.totalSamples>0&&this.metadata.setFormat("duration",t.totalSamples/t.sampleRate)}async parseComment(e){const t=await this.tokenizer.readToken(new s(e)),a=new he(t,0);a.readStringUtf8();const r=a.readInt32(),i=new Array(r);for(let e=0;e<r;e++)i[e]=a.parseUserComment();await Promise.all(i.map((e=>this.vorbisParser.addTag(e.key,e.value))))}async parsePicture(e){if(this.options.skipCovers)return this.tokenizer.ignore(e);const t=await this.tokenizer.readToken(new U(e));this.vorbisParser.addTag("METADATA_BLOCK_PICTURE",t)}}const ye={len:4,get:(e,t)=>({lastBlock:f(e,t,7),type:y(e,t,1,7),length:r.get(e,t+1)})},Ie={len:34,get:(e,t)=>({minimumBlockSize:i.get(e,t),maximumBlockSize:i.get(e,t+2)/1e3,minimumFrameSize:r.get(e,t+4),maximumFrameSize:r.get(e,t+7),sampleRate:r.get(e,t+10)>>4,channels:y(e,t+12,4,3)+1,bitsPerSample:y(e,t+12,7,5)+1,totalSamples:y(e,t+13,4,36),fileMD5:new s(16).get(e,t+18)})};export{ke as FlacParser};export default null;