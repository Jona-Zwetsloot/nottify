import*as e from"./token-types.js";import{EndOfStreamError as t}from"./strtok3.js";import a from"./debug.js";import{uint8ArrayToString as s,stringToUint8Array as r}from"./uint8array-extras.js";const i=e=>class extends Error{constructor(t){super(t),this.name=e}};class n extends(i("UnexpectedFileContentError")){constructor(e,t){super(t),this.fileType=e}toString(){return`${this.name} (FileType: ${this.fileType}): ${this.message}`}}class o extends(i("FieldDecodingError")){}class g extends(i("InternalParserError")){}const c=e=>class extends n{constructor(t){super(e,t)}};function h(e,t,a){return!!(e[t]&1<<a)}function l(e){const t=e.indexOf("\0");return-1===t?e:e.substr(0,t)}const p=/^[\x21-\x7eÂ©][\x20-\x7e\x00()]{3}/,d={len:4,get:(e,t)=>{const a=s(e.slice(t,t+d.len),"latin1");if(!a.match(p))throw new o(`FourCC contains invalid characters: ${function(e){const t=[];for(let a=0,s=e.length;a<s;a++){const s=Number(e.charCodeAt(a)).toString(16);t.push(1===s.length?`0${s}`:s)}return t.join(" ")}(a)} "${a}"`);return a},put:(e,t,a)=>{const s=r(a);if(4!==s.length)throw new g("Invalid length");return e.set(s,t),t+4}};class m{constructor(e,t,a){this.metadata=e,this.tokenizer=t,this.options=a}}class u{constructor(e,t){this.data=e,this.offset=t}readInt32(){const t=e.UINT32_LE.get(this.data,this.offset);return this.offset+=4,t}readStringUtf8(){const e=this.readInt32(),t=new TextDecoder("utf-8").decode(this.data.subarray(this.offset,this.offset+e));return this.offset+=e,t}parseUserComment(){const e=this.offset,t=this.readStringUtf8(),a=t.indexOf("=");return{key:t.slice(0,a).toUpperCase(),value:t.slice(a+1),len:this.offset-e}}}var f,T,b;!function(e){e[e.Other=0]="Other",e[e["32x32 pixels 'file icon' (PNG only)"]=1]="32x32 pixels 'file icon' (PNG only)",e[e["Other file icon"]=2]="Other file icon",e[e["Cover (front)"]=3]="Cover (front)",e[e["Cover (back)"]=4]="Cover (back)",e[e["Leaflet page"]=5]="Leaflet page",e[e["Media (e.g. label side of CD)"]=6]="Media (e.g. label side of CD)",e[e["Lead artist/lead performer/soloist"]=7]="Lead artist/lead performer/soloist",e[e["Artist/performer"]=8]="Artist/performer",e[e.Conductor=9]="Conductor",e[e["Band/Orchestra"]=10]="Band/Orchestra",e[e.Composer=11]="Composer",e[e["Lyricist/text writer"]=12]="Lyricist/text writer",e[e["Recording Location"]=13]="Recording Location",e[e["During recording"]=14]="During recording",e[e["During performance"]=15]="During performance",e[e["Movie/video screen capture"]=16]="Movie/video screen capture",e[e["A bright coloured fish"]=17]="A bright coloured fish",e[e.Illustration=18]="Illustration",e[e["Band/artist logotype"]=19]="Band/artist logotype",e[e["Publisher/Studio logotype"]=20]="Publisher/Studio logotype"}(f||(f={})),function(e){e[e.other=0]="other",e[e.lyrics=1]="lyrics",e[e.text=2]="text",e[e.movement_part=3]="movement_part",e[e.events=4]="events",e[e.chord=5]="chord",e[e.trivia_pop=6]="trivia_pop"}(T||(T={})),function(e){e[e.notSynchronized0=0]="notSynchronized0",e[e.mpegFrameNumber=1]="mpegFrameNumber",e[e.milliseconds=2]="milliseconds"}(b||(b={}));class y{static fromBase64(e){return y.fromBuffer(Uint8Array.from(atob(e),(e=>e.charCodeAt(0))))}static fromBuffer(e){return new y(e.length).get(e,0)}constructor(e){this.len=e}get(t,a){const s=f[e.UINT32_BE.get(t,a)];a+=4;const r=e.UINT32_BE.get(t,a);a+=4;const i=new e.StringType(r,"utf-8").get(t,a);a+=r;const n=e.UINT32_BE.get(t,a);a+=4;const o=new e.StringType(n,"utf-8").get(t,a);a+=n;const g=e.UINT32_BE.get(t,a);a+=4;const c=e.UINT32_BE.get(t,a);a+=4;const h=e.UINT32_BE.get(t,a);a+=4;const l=e.UINT32_BE.get(t,a);a+=4;const p=e.UINT32_BE.get(t,a);a+=4;return{type:s,format:i,description:o,width:g,height:c,colour_depth:h,indexed_color:l,data:Uint8Array.from(t.slice(a,a+p))}}}const I=7,N=(t,a)=>({packetType:e.UINT8.get(t,a),vorbis:new e.StringType(6,"ascii").get(t,a+1)}),w=(t,a)=>({version:e.UINT32_LE.get(t,a+0),channelMode:e.UINT8.get(t,a+4),sampleRate:e.UINT32_LE.get(t,a+5),bitrateMax:e.UINT32_LE.get(t,a+9),bitrateNominal:e.UINT32_LE.get(t,a+13),bitrateMin:e.UINT32_LE.get(t,a+17)}),_=a("music-metadata:parser:ogg:vorbis1");class U extends(c("Vorbis")){}class P{constructor(e,t){this.metadata=e,this.options=t,this.pageSegments=[]}async parsePage(e,t){if(e.headerType.firstPage)this.parseFirstPage(e,t);else{if(e.headerType.continued){if(0===this.pageSegments.length)throw new U("Cannot continue on previous page");this.pageSegments.push(t)}if(e.headerType.lastPage||!e.headerType.continued){if(this.pageSegments.length>0){const e=P.mergeUint8Arrays(this.pageSegments);await this.parseFullPage(e)}this.pageSegments=e.headerType.lastPage?[]:[t]}}e.headerType.lastPage&&this.calculateDuration(e)}static mergeUint8Arrays(e){const t=e.reduce(((e,t)=>e+t.length),0),a=new Uint8Array(t);return e.forEach(((e,t,s)=>{const r=s.slice(0,t).reduce(((e,t)=>e+t.length),0);a.set(e,r)})),a}async flush(){await this.parseFullPage(P.mergeUint8Arrays(this.pageSegments))}async parseUserComment(e,t){const a=new u(e,t).parseUserComment();return await this.addTag(a.key,a.value),a.len}async addTag(e,t){if("METADATA_BLOCK_PICTURE"===e&&"string"==typeof t){if(this.options.skipCovers)return void _("Ignore picture");t=y.fromBase64(t),_(`Push picture: id=${e}, format=${t.format}`)}else _(`Push tag: id=${e}, value=${t}`);await this.metadata.addTag("vorbis",e,t)}calculateDuration(e){this.metadata.format.sampleRate&&e.absoluteGranulePosition>=0&&(this.metadata.setFormat("numberOfSamples",e.absoluteGranulePosition),this.metadata.setFormat("duration",e.absoluteGranulePosition/this.metadata.format.sampleRate))}parseFirstPage(e,t){this.metadata.setFormat("codec","Vorbis I"),_("Parse first page");const a=N(t,0);if("vorbis"!==a.vorbis)throw new U("Metadata does not look like Vorbis");if(1!==a.packetType)throw new U("First Ogg page should be type 1: the identification header");{const e=w(t,I);this.metadata.setFormat("sampleRate",e.sampleRate),this.metadata.setFormat("bitrate",e.bitrateNominal),this.metadata.setFormat("numberOfChannels",e.channelMode),_("sample-rate=%s[hz], bitrate=%s[b/s], channel-mode=%s",e.sampleRate,e.bitrateNominal,e.channelMode)}}async parseFullPage(e){const t=N(e,0);if(_("Parse full page: type=%s, byteLength=%s",t.packetType,e.byteLength),3===t.packetType)return this.parseUserCommentList(e,I)}async parseUserCommentList(t,a){const s=e.UINT32_LE.get(t,a);a+=4,a+=s;let r=e.UINT32_LE.get(t,a);for(a+=4;r-- >0;)a+=await this.parseUserComment(t,a)}}class E extends(c("Opus")){}class S{constructor(e){if(this.len=e,e<19)throw new E("ID-header-page 0 should be at least 19 bytes long")}get(t,a){return{magicSignature:new e.StringType(8,"ascii").get(t,a+0),version:e.UINT8.get(t,a+8),channelCount:e.UINT8.get(t,a+9),preSkip:e.UINT16_LE.get(t,a+10),inputSampleRate:e.UINT32_LE.get(t,a+12),outputGain:e.UINT16_LE.get(t,a+16),channelMapping:e.UINT8.get(t,a+18)}}}class v extends P{constructor(e,t,a){super(e,t),this.tokenizer=a,this.idHeader=null,this.lastPos=-1}parseFirstPage(e,t){if(this.metadata.setFormat("codec","Opus"),this.idHeader=new S(t.length).get(t,0),"OpusHead"!==this.idHeader.magicSignature)throw new E("Illegal ogg/Opus magic-signature");this.metadata.setFormat("sampleRate",this.idHeader.inputSampleRate),this.metadata.setFormat("numberOfChannels",this.idHeader.channelCount)}async parseFullPage(t){if("OpusTags"===new e.StringType(8,"ascii").get(t,0))await this.parseUserCommentList(t,8),this.lastPos=this.tokenizer.position-t.length}calculateDuration(e){if(this.metadata.format.sampleRate&&e.absoluteGranulePosition>=0){const t=e.absoluteGranulePosition-this.idHeader.preSkip;if(this.metadata.setFormat("numberOfSamples",t),this.metadata.setFormat("duration",t/48e3),-1!==this.lastPos&&this.tokenizer.fileInfo.size&&this.metadata.format.duration){const e=this.tokenizer.fileInfo.size-this.lastPos;this.metadata.setFormat("bitrate",8*e/this.metadata.format.duration)}}}}const C=(t,a)=>({speex:new e.StringType(8,"ascii").get(t,a+0),version:l(new e.StringType(20,"ascii").get(t,a+8)),version_id:e.INT32_LE.get(t,a+28),header_size:e.INT32_LE.get(t,a+32),rate:e.INT32_LE.get(t,a+36),mode:e.INT32_LE.get(t,a+40),mode_bitstream_version:e.INT32_LE.get(t,a+44),nb_channels:e.INT32_LE.get(t,a+48),bitrate:e.INT32_LE.get(t,a+52),frame_size:e.INT32_LE.get(t,a+56),vbr:e.INT32_LE.get(t,a+60),frames_per_packet:e.INT32_LE.get(t,a+64),extra_headers:e.INT32_LE.get(t,a+68),reserved1:e.INT32_LE.get(t,a+72),reserved2:e.INT32_LE.get(t,a+76)}),L=a("music-metadata:parser:ogg:speex");class k extends P{constructor(e,t,a){super(e,t),this.tokenizer=a}parseFirstPage(e,t){L("First Ogg/Speex page");const a=C(t,0);this.metadata.setFormat("codec",`Speex ${a.version}`),this.metadata.setFormat("numberOfChannels",a.nb_channels),this.metadata.setFormat("sampleRate",a.rate),-1!==a.bitrate&&this.metadata.setFormat("bitrate",a.bitrate)}}const x=(t,a)=>({id:new e.StringType(7,"ascii").get(t,a),vmaj:e.UINT8.get(t,a+7),vmin:e.UINT8.get(t,a+8),vrev:e.UINT8.get(t,a+9),vmbw:e.UINT16_BE.get(t,a+10),vmbh:e.UINT16_BE.get(t,a+17),nombr:e.UINT24_BE.get(t,a+37),nqual:e.UINT8.get(t,a+40)}),F=a("music-metadata:parser:ogg:theora");class O{constructor(e,t,a){this.metadata=e,this.tokenizer=a}async parsePage(e,t){e.headerType.firstPage&&await this.parseFirstPage(e,t)}async flush(){F("flush")}calculateDuration(e){F("duration calculation not implemented")}async parseFirstPage(e,t){F("First Ogg/Theora page"),this.metadata.setFormat("codec","Theora");const a=x(t,0);this.metadata.setFormat("bitrate",a.nombr)}}class z extends(c("Ogg")){}const B=a("music-metadata:parser:ogg");class D{static sum(e,t,a){const s=new DataView(e.buffer,0);let r=0;for(let e=t;e<t+a;++e)r+=s.getUint8(e);return r}constructor(e){this.len=e.page_segments}get(e,t){return{totalPageSize:D.sum(e,t,this.len)}}}class A extends m{constructor(){super(...arguments),this.header=null,this.pageNumber=0,this.pageConsumer=null}async parse(){B("pos=%s, parsePage()",this.tokenizer.position);try{let t;do{if(t=await this.tokenizer.readToken(A.Header),"OggS"!==t.capturePattern)throw new z("Invalid Ogg capture pattern");this.metadata.setFormat("container","Ogg"),this.header=t,this.pageNumber=t.pageSequenceNo,B("page#=%s, Ogg.id=%s",t.pageSequenceNo,t.capturePattern);const a=await this.tokenizer.readToken(new D(t));B("totalPageSize=%s",a.totalPageSize);const s=await this.tokenizer.readToken(new e.Uint8ArrayType(a.totalPageSize));if(B("firstPage=%s, lastPage=%s, continued=%s",t.headerType.firstPage,t.headerType.lastPage,t.headerType.continued),t.headerType.firstPage){const e=new TextDecoder("ascii").decode(s.subarray(0,7));switch(e){case"vorbis":B("Set page consumer to Ogg/Vorbis"),this.pageConsumer=new P(this.metadata,this.options);break;case"OpusHea":B("Set page consumer to Ogg/Opus"),this.pageConsumer=new v(this.metadata,this.options,this.tokenizer);break;case"Speex  ":B("Set page consumer to Ogg/Speex"),this.pageConsumer=new k(this.metadata,this.options,this.tokenizer);break;case"fishead":case"\0theora":B("Set page consumer to Ogg/Theora"),this.pageConsumer=new O(this.metadata,this.options,this.tokenizer);break;default:throw new z(`gg audio-codec not recognized (id=${e})`)}}await this.pageConsumer.parsePage(t,s)}while(!t.headerType.lastPage)}catch(e){if(!(e instanceof Error))throw e;e instanceof t?(this.metadata.addWarning("Last OGG-page is not marked with last-page flag"),B("End-of-stream"),this.metadata.addWarning("Last OGG-page is not marked with last-page flag"),this.header&&this.pageConsumer.calculateDuration(this.header)):e.message.startsWith("FourCC")&&this.pageNumber>0&&(this.metadata.addWarning("Invalid FourCC ID, maybe last OGG-page is not marked with last-page flag"),await this.pageConsumer.flush())}}}A.Header={len:27,get:(t,a)=>({capturePattern:d.get(t,a),version:e.UINT8.get(t,a+4),headerType:{continued:h(t,a+5,0),firstPage:h(t,a+5,1),lastPage:h(t,a+5,2)},absoluteGranulePosition:Number(e.UINT64_LE.get(t,a+6)),streamSerialNumber:e.UINT32_LE.get(t,a+14),pageSequenceNo:e.UINT32_LE.get(t,a+18),pageChecksum:e.UINT32_LE.get(t,a+22),page_segments:e.UINT8.get(t,a+26)})};export{z as OggContentError,A as OggParser,D as SegmentTable};export default null;